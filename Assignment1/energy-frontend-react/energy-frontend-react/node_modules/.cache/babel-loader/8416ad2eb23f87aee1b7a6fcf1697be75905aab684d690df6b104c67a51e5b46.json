{"ast":null,"code":"var _jsxFileName = \"D:\\\\AN4_SEMESTRUL1\\\\DS_Lab\\\\Assignment1\\\\energy-frontend-react\\\\energy-frontend-react\\\\src\\\\components\\\\UserDevice.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserDevice = () => {\n  _s();\n  const [devices, setDevices] = useState([]);\n  const [userId, setUserId] = useState(null); // State variable to store the user ID\n\n  // useEffect(() => {\n  //     // Fetch the user ID when the component mounts (you need to implement this part)\n  //     fetchUserId();\n\n  //     // The user ID will be set in the state variable userId\n  // }, []);\n\n  useEffect(() => {\n    // When the user ID is available, fetch the devices assigned to that user\n    if (userId !== null) {\n      fetchDevicesByUserId(userId);\n    }\n  }, [userId]);\n  const fetchUserId = () => {\n    // Implement this part to obtain the user ID of the logged-in user\n    // This depends on your authentication system and how you store user information\n    // For example, if you are using JSON Web Tokens (JWT), you can decode the token to get user information.\n    // You might need to use a state management library like Redux or useContext to make user data available here.\n    const token = localStorage.getItem('token');\n    const decodedToken = JSON.parse(atob(token.split('.')[1]));\n    const userId = decodedToken.userId;\n    setUserId(userId);\n  };\n  const fetchDevicesByUserId = () => {\n    const token = localStorage.getItem('token');\n    const decodedToken = JSON.parse(atob(token.split('.')[1]));\n    const decodedUserId = decodedToken.userId;\n    setUserId(decodedUserId);\n\n    // Make an API request to your backend to fetch devices by user ID\n    fetch(`http://localhost:8081/device/getDevicesByUserId/${decodedUserId}`, {\n      method: 'GET'\n    }).then(response => {\n      if (response.status === 200) {\n        return response.json();\n      } else {\n        throw new Error('Failed to fetch devices by user ID');\n      }\n    }).then(data => {\n      setDevices(data);\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Devices Assigned to You\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: devices.map(device => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Device Id:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }, this), \" \", device.deviceId, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Device Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this), \" \", device.device_name, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Address:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this), \" \", device.address, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Description:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }, this), \" \", device.description, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Max Hourly:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }, this), \" \", device.max_hourly, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"User Id::\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }, this), \" \", device.userId]\n      }, device.deviceId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n_s(UserDevice, \"Q22qh/WXlzaduif2x46iPPbA8rc=\");\n_c = UserDevice;\nexport default UserDevice;\nvar _c;\n$RefreshReg$(_c, \"UserDevice\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","UserDevice","_s","devices","setDevices","userId","setUserId","fetchDevicesByUserId","fetchUserId","token","localStorage","getItem","decodedToken","JSON","parse","atob","split","decodedUserId","fetch","method","then","response","status","json","Error","data","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","device","deviceId","device_name","address","description","max_hourly","_c","$RefreshReg$"],"sources":["D:/AN4_SEMESTRUL1/DS_Lab/Assignment1/energy-frontend-react/energy-frontend-react/src/components/UserDevice.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst UserDevice = () => {\r\n    const [devices, setDevices] = useState([]);\r\n    const [userId, setUserId] = useState(null); // State variable to store the user ID\r\n\r\n    // useEffect(() => {\r\n    //     // Fetch the user ID when the component mounts (you need to implement this part)\r\n    //     fetchUserId();\r\n\r\n    //     // The user ID will be set in the state variable userId\r\n    // }, []);\r\n\r\n    useEffect(() => {\r\n        // When the user ID is available, fetch the devices assigned to that user\r\n        if (userId !== null) {\r\n            fetchDevicesByUserId(userId);\r\n        }\r\n    }, [userId]);\r\n\r\n    const fetchUserId = () => {\r\n        // Implement this part to obtain the user ID of the logged-in user\r\n        // This depends on your authentication system and how you store user information\r\n        // For example, if you are using JSON Web Tokens (JWT), you can decode the token to get user information.\r\n        // You might need to use a state management library like Redux or useContext to make user data available here.\r\n        const token = localStorage.getItem('token');\r\n        const decodedToken = JSON.parse(atob(token.split('.')[1]));\r\n        const userId = decodedToken.userId;\r\n        setUserId(userId);\r\n\r\n    };\r\n\r\n    const fetchDevicesByUserId = () => {\r\n        const token = localStorage.getItem('token');\r\n        const decodedToken = JSON.parse(atob(token.split('.')[1]));\r\n        const decodedUserId = decodedToken.userId;\r\n        setUserId(decodedUserId);\r\n\r\n        // Make an API request to your backend to fetch devices by user ID\r\n        fetch(`http://localhost:8081/device/getDevicesByUserId/${decodedUserId}`, {\r\n            method: 'GET'\r\n        })\r\n            .then((response) => {\r\n                if (response.status === 200) {\r\n                    return response.json();\r\n                } else {\r\n                    throw new Error('Failed to fetch devices by user ID');\r\n                }\r\n            })\r\n            .then((data) => {\r\n                setDevices(data);\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error:', error);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Devices Assigned to You</h2>\r\n            <ul>\r\n                {devices.map((device) => (\r\n                    <li key={device.deviceId}>\r\n                        <strong>Device Id:</strong> {device.deviceId}\r\n                        <br />\r\n                        <strong>Device Name:</strong> {device.device_name}\r\n                        <br />\r\n                        <strong>Address:</strong> {device.address}\r\n                        <br />\r\n                        <strong>Description:</strong> {device.description}\r\n                        <br />\r\n                        <strong>Max Hourly:</strong> {device.max_hourly}\r\n                        <br />\r\n                        <strong>User Id::</strong> {device.userId}\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserDevice;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}