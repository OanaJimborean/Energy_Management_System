{"ast":null,"code":"var _jsxFileName = \"D:\\\\AN4_SEMESTRUL1\\\\DS_Lab\\\\Assignment1\\\\energy-frontend-react\\\\energy-frontend-react\\\\src\\\\components\\\\ChatRoom.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { over } from 'stompjs';\nimport SockJS from 'sockjs-client';\nimport '../chat.css';\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar stompClient = null;\nconst ChatRoom = () => {\n  _s();\n  var _location$state;\n  const location = useLocation();\n  const userEmail = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.email) || '';\n  const [privateChats, setPrivateChats] = useState(new Map());\n  const [publicChats, setPublicChats] = useState([]);\n  const [tab, setTab] = useState('CHATROOM');\n  const [loggedInUsers, setLoggedInUsers] = useState([]);\n  const [userRole, setUserRole] = useState('');\n  const isAdmin = userData.role === 'admin';\n  const [userData, setUserData] = useState({\n    username: userEmail,\n    receivername: '',\n    connected: false,\n    message: ''\n  });\n  useEffect(() => {\n    connect();\n    console.log(userData);\n    fetchLoggedInUsers();\n    const token = localStorage.getItem('token');\n    // Assuming decodeToken is a function that decodes the token\n    const decodedToken = decodeToken(token);\n    if (decodedToken) {\n      const role = decodedToken.role; // Extract user role from the decoded token\n      setUserRole(role); // Set the user's role in the state\n    }\n  }, []);\n  const connect = () => {\n    let Sock = new SockJS('http://localhost:8084/ws');\n    stompClient = over(Sock);\n    stompClient.connect({}, onConnected, onError);\n  };\n  const fetchLoggedInUsers = () => {\n    const token = localStorage.getItem('token');\n    fetch('http://localhost:8082/user/getLoggedInUsers', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      }\n    }).then(response => response.json()).then(data => {\n      setLoggedInUsers(data); // Update the state with logged-in users' data\n    }).catch(error => {\n      console.error('Error fetching logged-in users:', error);\n    });\n  };\n  const onConnected = () => {\n    setUserData({\n      ...userData,\n      connected: true\n    });\n    stompClient.subscribe('/chatroom/public', onMessageReceived);\n    stompClient.subscribe('/user/' + userData.username + '/private', onPrivateMessage);\n    userJoin();\n  };\n  const userJoin = () => {\n    var chatMessage = {\n      senderName: userData.username,\n      status: 'JOIN'\n    };\n    stompClient.send('/app/message', {}, JSON.stringify(chatMessage));\n  };\n  const onError = err => {\n    console.log(err);\n  };\n  const onMessageReceived = payload => {\n    var payloadData = JSON.parse(payload.body);\n    switch (payloadData.status) {\n      case \"JOIN\":\n        if (!privateChats.get(payloadData.senderName)) {\n          privateChats.set(payloadData.senderName, []);\n          setLoggedInUsers(prevUsers => [...prevUsers, payloadData.senderName]);\n        }\n        break;\n      case \"MESSAGE\":\n        publicChats.push(payloadData);\n        setPublicChats([...publicChats]);\n        break;\n    }\n  };\n  const onPrivateMessage = payload => {\n    var payloadData = JSON.parse(payload.body);\n    const senderChats = privateChats.get(payloadData.senderName) || [];\n    const updatedChats = [...senderChats, payloadData];\n    setPrivateChats(new Map(privateChats.set(payloadData.senderName, updatedChats)));\n  };\n  const handleMessage = event => {\n    const {\n      value\n    } = event.target;\n    setUserData({\n      ...userData,\n      message: value\n    });\n  };\n  const sendValue = () => {\n    if (stompClient) {\n      var chatMessage = {\n        senderName: userData.username,\n        message: userData.message,\n        status: 'MESSAGE'\n      };\n      console.log(chatMessage);\n      stompClient.send('/app/message', {}, JSON.stringify(chatMessage));\n      setUserData({\n        ...userData,\n        message: ''\n      });\n    }\n  };\n  const sendPrivateValue = () => {\n    if (stompClient && userData.role === 'admin' && userData.username !== tab) {\n      var chatMessage = {\n        senderName: userData.username,\n        receiverName: tab,\n        message: userData.message,\n        status: 'MESSAGE'\n      };\n      if (userData.username !== tab) {\n        privateChats.get(tab).push(chatMessage);\n        setPrivateChats(new Map(privateChats));\n      }\n      stompClient.send('/app/private-message', {}, JSON.stringify(chatMessage));\n      setUserData({\n        ...userData,\n        message: ''\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: isAdmin && stompClient && userData.connected ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"member-list\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => {\n              setTab('CHATROOM');\n            },\n            className: `member ${tab === 'CHATROOM' && 'active'}`,\n            children: \"Chatroom\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 15\n          }, this), [...privateChats.keys()].map((name, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => {\n              setTab(name);\n            },\n            className: `member ${tab === name && 'active'}`,\n            children: name\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this), tab === 'CHATROOM' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"chat-messages\",\n          children: publicChats.map((chat, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: `message ${chat.senderName === userData.username && 'self'}`,\n            children: [chat.senderName !== userData.username && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"avatar\",\n              children: chat.senderName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-data\",\n              children: chat.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 21\n            }, this), chat.senderName === userData.username && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"avatar self\",\n              children: chat.senderName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 23\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"send-message\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"input-message\",\n            placeholder: \"enter the message\",\n            value: userData.message,\n            onChange: handleMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"send-button\",\n            onClick: sendValue,\n            children: \"send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 13\n      }, this), tab !== 'CHATROOM' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"chat-messages\",\n          children: [...privateChats.get(tab)].map((chat, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: `message ${chat.senderName === userData.username && 'self'}`,\n            children: [chat.senderName !== userData.username && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"avatar\",\n              children: chat.senderName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-data\",\n              children: chat.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 21\n            }, this), chat.senderName === userData.username && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"avatar self\",\n              children: chat.senderName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 23\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"send-message\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"input-message\",\n            placeholder: \"enter the message\",\n            value: userData.message,\n            onChange: handleMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"send-button\",\n            onClick: sendPrivateValue,\n            children: \"send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }, this) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatRoom, \"sPovxTXP5Z5S0ynR9JRdCXo63GI=\", false, function () {\n  return [useLocation];\n});\n_c = ChatRoom;\nexport default ChatRoom;\nvar _c;\n$RefreshReg$(_c, \"ChatRoom\");","map":{"version":3,"names":["React","useEffect","useState","over","SockJS","useLocation","jsxDEV","_jsxDEV","stompClient","ChatRoom","_s","_location$state","location","userEmail","state","email","privateChats","setPrivateChats","Map","publicChats","setPublicChats","tab","setTab","loggedInUsers","setLoggedInUsers","userRole","setUserRole","isAdmin","userData","role","setUserData","username","receivername","connected","message","connect","console","log","fetchLoggedInUsers","token","localStorage","getItem","decodedToken","decodeToken","Sock","onConnected","onError","fetch","method","headers","then","response","json","data","catch","error","subscribe","onMessageReceived","onPrivateMessage","userJoin","chatMessage","senderName","status","send","JSON","stringify","err","payload","payloadData","parse","body","get","set","prevUsers","push","senderChats","updatedChats","handleMessage","event","value","target","sendValue","sendPrivateValue","receiverName","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","keys","map","name","index","chat","type","placeholder","onChange","_c","$RefreshReg$"],"sources":["D:/AN4_SEMESTRUL1/DS_Lab/Assignment1/energy-frontend-react/energy-frontend-react/src/components/ChatRoom.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { over } from 'stompjs';\r\nimport SockJS from 'sockjs-client';\r\nimport '../chat.css';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nvar stompClient = null;\r\n\r\nconst ChatRoom = () => {\r\n  const location = useLocation();\r\n  const userEmail = location.state?.email || '';  \r\n  const [privateChats, setPrivateChats] = useState(new Map());\r\n  const [publicChats, setPublicChats] = useState([]);\r\n  const [tab, setTab] = useState('CHATROOM');\r\n  const [loggedInUsers, setLoggedInUsers] = useState([]);\r\n  const [userRole, setUserRole] = useState('');\r\n\r\n  const isAdmin = userData.role === 'admin';\r\n  \r\n  const [userData, setUserData] = useState({\r\n    username: userEmail,\r\n    receivername: '',\r\n    connected: false,\r\n    message: '',\r\n  });\r\n\r\n  useEffect(() => {\r\n    connect();\r\n    console.log(userData);\r\n    fetchLoggedInUsers();\r\n    const token = localStorage.getItem('token');\r\n    // Assuming decodeToken is a function that decodes the token\r\n    const decodedToken = decodeToken(token);\r\n    if (decodedToken) {\r\n      const role = decodedToken.role; // Extract user role from the decoded token\r\n      setUserRole(role); // Set the user's role in the state\r\n    }\r\n  }, []);\r\n\r\n  const connect = () => {\r\n    let Sock = new SockJS('http://localhost:8084/ws');\r\n    stompClient = over(Sock);\r\n    stompClient.connect({}, onConnected, onError);\r\n  };\r\n\r\n  const fetchLoggedInUsers = () => {\r\n    const token = localStorage.getItem('token');\r\n    fetch('http://localhost:8082/user/getLoggedInUsers', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${token}`,\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setLoggedInUsers(data); // Update the state with logged-in users' data\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching logged-in users:', error);\r\n      });\r\n  };\r\n\r\n\r\n  const onConnected = () => {\r\n    setUserData({ ...userData, connected: true });\r\n    stompClient.subscribe('/chatroom/public', onMessageReceived);\r\n    stompClient.subscribe('/user/' + userData.username + '/private', onPrivateMessage);\r\n    userJoin();\r\n  };\r\n\r\n  const userJoin = () => {\r\n    var chatMessage = {\r\n      senderName: userData.username,\r\n      status: 'JOIN',\r\n    };\r\n    stompClient.send('/app/message', {}, JSON.stringify(chatMessage));\r\n  };\r\n\r\n  const onError = (err) => {\r\n    console.log(err);\r\n    \r\n}\r\nconst onMessageReceived = (payload)=>{\r\n  var payloadData = JSON.parse(payload.body);\r\n  switch(payloadData.status){\r\n      case \"JOIN\":\r\n          if(!privateChats.get(payloadData.senderName)){\r\n              privateChats.set(payloadData.senderName,[]);\r\n      setLoggedInUsers((prevUsers) => [...prevUsers, payloadData.senderName]);\r\n          }\r\n      break;\r\n      case \"MESSAGE\":\r\n          publicChats.push(payloadData);\r\n          setPublicChats([...publicChats]);\r\n          break;\r\n  }\r\n}\r\n  \r\n  const onPrivateMessage = (payload) => {\r\n    var payloadData = JSON.parse(payload.body);\r\n    const senderChats = privateChats.get(payloadData.senderName) || [];\r\n    const updatedChats = [...senderChats, payloadData];\r\n    setPrivateChats(new Map(privateChats.set(payloadData.senderName, updatedChats)));\r\n  };\r\n  \r\n\r\n  const handleMessage = (event) => {\r\n    const { value } = event.target;\r\n    setUserData({ ...userData, message: value });\r\n  };\r\n  \r\n\r\n  const sendValue = () => {\r\n    if (stompClient) {\r\n      var chatMessage = {\r\n        senderName: userData.username,\r\n        message: userData.message,\r\n        status: 'MESSAGE',\r\n      };\r\n      console.log(chatMessage);\r\n      stompClient.send('/app/message', {}, JSON.stringify(chatMessage));\r\n      setUserData({ ...userData, message: '' });\r\n    }\r\n  };\r\n\r\n  const sendPrivateValue = () => {\r\n    if (stompClient && userData.role === 'admin' && userData.username !== tab) {\r\n      var chatMessage = {\r\n        senderName: userData.username,\r\n        receiverName: tab,\r\n        message: userData.message,\r\n        status: 'MESSAGE',\r\n      };\r\n\r\n      if (userData.username !== tab) {\r\n        privateChats.get(tab).push(chatMessage);\r\n        setPrivateChats(new Map(privateChats));\r\n      }\r\n      stompClient.send('/app/private-message', {}, JSON.stringify(chatMessage));\r\n      setUserData({ ...userData, message: '' });\r\n    }\r\n  };\r\n\r\n \r\n  return (\r\n    <div className=\"container\">\r\n      {isAdmin && stompClient && userData.connected ? (\r\n        <div className=\"chat-box\">\r\n          <div className=\"member-list\">\r\n            <ul>\r\n              <li\r\n                onClick={() => {\r\n                  setTab('CHATROOM');\r\n                }}\r\n                className={`member ${tab === 'CHATROOM' && 'active'}`}\r\n              >\r\n                Chatroom\r\n              </li>\r\n              {[...privateChats.keys()].map((name, index) => (\r\n                <li\r\n                  onClick={() => {\r\n                    setTab(name);\r\n                  }}\r\n                  className={`member ${tab === name && 'active'}`}\r\n                  key={index}\r\n                >\r\n                  {name}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n          {tab === 'CHATROOM' && (\r\n            <div className=\"chat-content\">\r\n              <ul className=\"chat-messages\">\r\n                {publicChats.map((chat, index) => (\r\n                  <li\r\n                    className={`message ${\r\n                      chat.senderName === userData.username && 'self'\r\n                    }`}\r\n                    key={index}\r\n                  >\r\n                    {chat.senderName !== userData.username && (\r\n                      <div className=\"avatar\">{chat.senderName}</div>\r\n                    )}\r\n                    <div className=\"message-data\">{chat.message}</div>\r\n                    {chat.senderName === userData.username && (\r\n                      <div className=\"avatar self\">{chat.senderName}</div>\r\n                    )}\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n\r\n              <div className=\"send-message\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"input-message\"\r\n                  placeholder=\"enter the message\"\r\n                  value={userData.message}\r\n                  onChange={handleMessage}\r\n                />\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"send-button\"\r\n                  onClick={sendValue}\r\n                >\r\n                  send\r\n                </button>\r\n              </div>\r\n            </div>\r\n          )}\r\n          {tab !== 'CHATROOM' && (\r\n            <div className=\"chat-content\">\r\n              <ul className=\"chat-messages\">\r\n                {[...privateChats.get(tab)].map((chat, index) => (\r\n                  <li\r\n                    className={`message ${\r\n                      chat.senderName === userData.username && 'self'\r\n                    }`}\r\n                    key={index}\r\n                  >\r\n                    {chat.senderName !== userData.username && (\r\n                      <div className=\"avatar\">{chat.senderName}</div>\r\n                    )}\r\n                    <div className=\"message-data\">{chat.message}</div>\r\n                    {chat.senderName === userData.username && (\r\n                      <div className=\"avatar self\">{chat.senderName}</div>\r\n                    )}\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n\r\n              <div className=\"send-message\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"input-message\"\r\n                  placeholder=\"enter the message\"\r\n                  value={userData.message}\r\n                  onChange={handleMessage}\r\n                />\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"send-button\"\r\n                  onClick={sendPrivateValue}\r\n                >\r\n                  send\r\n                </button>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatRoom;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}