{"ast":null,"code":"var _jsxFileName = \"D:\\\\AN4_SEMESTRUL1\\\\DS_Lab\\\\Assignment1\\\\energy-frontend-react\\\\energy-frontend-react\\\\src\\\\components\\\\ChatRoom.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { over } from 'stompjs';\nimport SockJS from 'sockjs-client';\nimport '../chat.css';\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar stompClient = null;\nconst ChatRoom = () => {\n  _s();\n  var _location$state;\n  const location = useLocation();\n  const userEmail = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.email) || '';\n  const [privateChats, setPrivateChats] = useState(new Map());\n  const [publicChats, setPublicChats] = useState([]);\n  const [tab, setTab] = useState('CHATROOM');\n  const [loggedInUsers, setLoggedInUsers] = useState([]);\n  const [userData, setUserData] = useState({\n    username: userEmail,\n    receivername: '',\n    connected: false,\n    message: ''\n  });\n  useEffect(() => {\n    connect();\n    console.log(userData);\n    fetchLoggedInUsers();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const connect = () => {\n    let Sock = new SockJS('http://localhost:8084/ws');\n    stompClient = over(Sock);\n    stompClient.connect({}, onConnected, onError);\n  };\n  const fetchLoggedInUsers = () => {\n    const token = localStorage.getItem('token');\n    fetch('http://localhost:8082/user/getLoggedInUsers', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      }\n    }).then(response => response.json()).then(data => {\n      setLoggedInUsers(data); // Update the state with logged-in users' data\n    }).catch(error => {\n      console.error('Error fetching logged-in users:', error);\n    });\n  };\n  const removeLoggedOutUsers = updatedUsers => {\n    const currentUsers = [...loggedInUsers];\n    const filteredUsers = currentUsers.filter(user => updatedUsers.some(updatedUser => updatedUser.email === user.email));\n    setLoggedInUsers(filteredUsers);\n  };\n  const onConnected = () => {\n    setUserData({\n      ...userData,\n      connected: true\n    });\n    stompClient.subscribe('/chatroom/public', onMessageReceived);\n    stompClient.subscribe('/user/' + userData.username + '/private', onPrivateMessage);\n    userJoin();\n  };\n  const userJoin = () => {\n    var chatMessage = {\n      senderName: userData.username,\n      status: 'JOIN'\n    };\n    stompClient.send('/app/message', {}, JSON.stringify(chatMessage));\n  };\n  const onError = err => {\n    console.log(err);\n  };\n  const onMessageReceived = payload => {\n    var payloadData = JSON.parse(payload.body);\n    switch (payloadData.status) {\n      case 'JOIN':\n        if (!privateChats.get(payloadData.senderName)) {\n          setPrivateChats(new Map(privateChats.set(payloadData.senderName, [])));\n        }\n        break;\n      case 'MESSAGE':\n        publicChats.push(payloadData);\n        setPublicChats([...publicChats]);\n        break;\n      case 'LOGOUT':\n        // Assuming you receive an event when a user logs out\n        removeLoggedOutUsers(payloadData.updatedUsers);\n        break;\n      // Add other cases if your WebSocket sends logout events or user updates\n      default:\n        break;\n    }\n  };\n  const onPrivateMessage = payload => {\n    var payloadData = JSON.parse(payload.body);\n    const senderChats = privateChats.get(payloadData.senderName) || [];\n    const updatedChats = [...senderChats, payloadData];\n    setPrivateChats(new Map(privateChats.set(payloadData.senderName, updatedChats)));\n  };\n  const handleMessage = event => {\n    const {\n      value\n    } = event.target;\n    setUserData({\n      ...userData,\n      message: value\n    });\n  };\n  const sendValue = () => {\n    if (stompClient) {\n      var chatMessage = {\n        senderName: userData.username,\n        message: userData.message,\n        status: 'MESSAGE'\n      };\n      console.log(chatMessage);\n      stompClient.send('/app/message', {}, JSON.stringify(chatMessage));\n      setUserData({\n        ...userData,\n        message: ''\n      });\n    }\n  };\n  const sendPrivateValue = () => {\n    if (stompClient && userData.username !== tab) {\n      var chatMessage = {\n        senderName: userData.username,\n        receiverName: tab,\n        message: userData.message,\n        status: 'MESSAGE'\n      };\n      if (userData.username !== tab) {\n        privateChats.get(tab).push(chatMessage);\n        setPrivateChats(new Map(privateChats));\n      }\n      stompClient.send('/app/private-message', {}, JSON.stringify(chatMessage));\n      setUserData({\n        ...userData,\n        message: ''\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: stompClient && userData.connected ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"member-list\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"member-list\",\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: loggedInUsers.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n                onClick: () => {\n                  setTab(user.email); // Set the tab to the selected user's email\n                },\n\n                className: `member ${tab === user.email && 'active'}`,\n                children: user.email\n              }, user.userId, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 7\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 3\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => {\n              setTab('CHATROOM');\n            },\n            className: `member ${tab === 'CHATROOM' && 'active'}`,\n            children: \"Chatroom\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 15\n          }, this), [...privateChats.keys()].map((name, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => {\n              setTab(name);\n            },\n            className: `member ${tab === name && 'active'}`,\n            children: name\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }, this), tab === 'CHATROOM' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"chat-messages\",\n          children: publicChats.map((chat, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: `message ${chat.senderName === userData.username && 'self'}`,\n            children: [chat.senderName !== userData.username && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"avatar\",\n              children: chat.senderName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-data\",\n              children: chat.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 21\n            }, this), chat.senderName === userData.username && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"avatar self\",\n              children: chat.senderName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 23\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"send-message\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"input-message\",\n            placeholder: \"enter the message\",\n            value: userData.message,\n            onChange: handleMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"send-button\",\n            onClick: sendValue,\n            children: \"send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 13\n      }, this), tab !== 'CHATROOM' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"chat-messages\",\n          children: [...privateChats.get(tab)].map((chat, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: `message ${chat.senderName === userData.username && 'self'}`,\n            children: [chat.senderName !== userData.username && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"avatar\",\n              children: chat.senderName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-data\",\n              children: chat.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 21\n            }, this), chat.senderName === userData.username && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"avatar self\",\n              children: chat.senderName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 23\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"send-message\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"input-message\",\n            placeholder: \"enter the message\",\n            value: userData.message,\n            onChange: handleMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"send-button\",\n            onClick: sendPrivateValue,\n            children: \"send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }, this) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatRoom, \"75MFTzvCcMmvN7zmuPNgAOpkkt4=\", false, function () {\n  return [useLocation];\n});\n_c = ChatRoom;\nexport default ChatRoom;\nvar _c;\n$RefreshReg$(_c, \"ChatRoom\");","map":{"version":3,"names":["React","useEffect","useState","over","SockJS","useLocation","jsxDEV","_jsxDEV","stompClient","ChatRoom","_s","_location$state","location","userEmail","state","email","privateChats","setPrivateChats","Map","publicChats","setPublicChats","tab","setTab","loggedInUsers","setLoggedInUsers","userData","setUserData","username","receivername","connected","message","connect","console","log","fetchLoggedInUsers","Sock","onConnected","onError","token","localStorage","getItem","fetch","method","headers","then","response","json","data","catch","error","removeLoggedOutUsers","updatedUsers","currentUsers","filteredUsers","filter","user","some","updatedUser","subscribe","onMessageReceived","onPrivateMessage","userJoin","chatMessage","senderName","status","send","JSON","stringify","err","payload","payloadData","parse","body","get","set","push","senderChats","updatedChats","handleMessage","event","value","target","sendValue","sendPrivateValue","receiverName","className","children","map","onClick","userId","fileName","_jsxFileName","lineNumber","columnNumber","keys","name","index","chat","type","placeholder","onChange","_c","$RefreshReg$"],"sources":["D:/AN4_SEMESTRUL1/DS_Lab/Assignment1/energy-frontend-react/energy-frontend-react/src/components/ChatRoom.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { over } from 'stompjs';\r\nimport SockJS from 'sockjs-client';\r\nimport '../chat.css';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nvar stompClient = null;\r\n\r\nconst ChatRoom = () => {\r\n  const location = useLocation();\r\n  const userEmail = location.state?.email || '';\r\n  const [privateChats, setPrivateChats] = useState(new Map());\r\n  const [publicChats, setPublicChats] = useState([]);\r\n  const [tab, setTab] = useState('CHATROOM');\r\n  const [loggedInUsers, setLoggedInUsers] = useState([]);\r\n\r\n\r\n  const [userData, setUserData] = useState({\r\n    username: userEmail,\r\n    receivername: '',\r\n    connected: false,\r\n    message: '',\r\n  });\r\n\r\n  useEffect(() => {\r\n    connect();\r\n    console.log(userData);\r\n    fetchLoggedInUsers();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const connect = () => {\r\n    let Sock = new SockJS('http://localhost:8084/ws');\r\n    stompClient = over(Sock);\r\n    stompClient.connect({}, onConnected, onError);\r\n  };\r\n\r\n  \r\n\r\n  const fetchLoggedInUsers = () => {\r\n    const token = localStorage.getItem('token');\r\n    fetch('http://localhost:8082/user/getLoggedInUsers', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${token}`,\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setLoggedInUsers(data); // Update the state with logged-in users' data\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching logged-in users:', error);\r\n      });\r\n  };\r\n\r\n  const removeLoggedOutUsers = (updatedUsers) => {\r\n    const currentUsers = [...loggedInUsers];\r\n    const filteredUsers = currentUsers.filter((user) =>\r\n      updatedUsers.some((updatedUser) => updatedUser.email === user.email)\r\n    );\r\n    setLoggedInUsers(filteredUsers);\r\n  };\r\n\r\n  const onConnected = () => {\r\n    setUserData({ ...userData, connected: true });\r\n    stompClient.subscribe('/chatroom/public', onMessageReceived);\r\n    stompClient.subscribe('/user/' + userData.username + '/private', onPrivateMessage);\r\n    userJoin();\r\n  };\r\n\r\n  const userJoin = () => {\r\n    var chatMessage = {\r\n      senderName: userData.username,\r\n      status: 'JOIN',\r\n    };\r\n    stompClient.send('/app/message', {}, JSON.stringify(chatMessage));\r\n  };\r\n\r\n  const onError = (err) => {\r\n    console.log(err);\r\n\r\n  }\r\n  const onMessageReceived = (payload) => {\r\n    var payloadData = JSON.parse(payload.body);\r\n    switch (payloadData.status) {\r\n      case 'JOIN':\r\n        if (!privateChats.get(payloadData.senderName)) {\r\n          setPrivateChats(new Map(privateChats.set(payloadData.senderName, [])));\r\n        }\r\n        break;\r\n      case 'MESSAGE':\r\n        publicChats.push(payloadData);\r\n        setPublicChats([...publicChats]);\r\n        break;\r\n      case 'LOGOUT': // Assuming you receive an event when a user logs out\r\n        removeLoggedOutUsers(payloadData.updatedUsers);\r\n        break;\r\n      // Add other cases if your WebSocket sends logout events or user updates\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n\r\n  const onPrivateMessage = (payload) => {\r\n    var payloadData = JSON.parse(payload.body);\r\n    const senderChats = privateChats.get(payloadData.senderName) || [];\r\n    const updatedChats = [...senderChats, payloadData];\r\n    setPrivateChats(new Map(privateChats.set(payloadData.senderName, updatedChats)));\r\n  };\r\n\r\n\r\n  const handleMessage = (event) => {\r\n    const { value } = event.target;\r\n    setUserData({ ...userData, message: value });\r\n  };\r\n\r\n\r\n  const sendValue = () => {\r\n    if (stompClient) {\r\n      var chatMessage = {\r\n        senderName: userData.username,\r\n        message: userData.message,\r\n        status: 'MESSAGE',\r\n      };\r\n      console.log(chatMessage);\r\n      stompClient.send('/app/message', {}, JSON.stringify(chatMessage));\r\n      setUserData({ ...userData, message: '' });\r\n    }\r\n  };\r\n\r\n  const sendPrivateValue = () => {\r\n    if (stompClient && userData.username !== tab) {\r\n      var chatMessage = {\r\n        senderName: userData.username,\r\n        receiverName: tab,\r\n        message: userData.message,\r\n        status: 'MESSAGE',\r\n      };\r\n\r\n      if (userData.username !== tab) {\r\n        privateChats.get(tab).push(chatMessage);\r\n        setPrivateChats(new Map(privateChats));\r\n      }\r\n      stompClient.send('/app/private-message', {}, JSON.stringify(chatMessage));\r\n      setUserData({ ...userData, message: '' });\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {stompClient && userData.connected ? (\r\n        <div className=\"chat-box\">\r\n          <div className=\"member-list\">\r\n            <ul>\r\n            <div className=\"member-list\">\r\n  <ul>\r\n    {/* Display the list of logged-in users */}\r\n    {loggedInUsers.map((user) => (\r\n      <li\r\n        onClick={() => {\r\n          setTab(user.email); // Set the tab to the selected user's email\r\n        }}\r\n        className={`member ${tab === user.email && 'active'}`}\r\n        key={user.userId}\r\n      >\r\n        {user.email}\r\n      </li>\r\n    ))}\r\n  </ul>\r\n</div>\r\n              <li\r\n                onClick={() => {\r\n                  setTab('CHATROOM');\r\n                }}\r\n                className={`member ${tab === 'CHATROOM' && 'active'}`}\r\n              >\r\n                Chatroom\r\n              </li>\r\n              {[...privateChats.keys()].map((name, index) => (\r\n                <li\r\n                  onClick={() => {\r\n                    setTab(name);\r\n                  }}\r\n                  className={`member ${tab === name && 'active'}`}\r\n                  key={index}\r\n                >\r\n                  {name}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n          {tab === 'CHATROOM' && (\r\n            <div className=\"chat-content\">\r\n              <ul className=\"chat-messages\">\r\n                {publicChats.map((chat, index) => (\r\n                  <li\r\n                    className={`message ${chat.senderName === userData.username && 'self'\r\n                      }`}\r\n                    key={index}\r\n                  >\r\n                    {chat.senderName !== userData.username && (\r\n                      <div className=\"avatar\">{chat.senderName}</div>\r\n                    )}\r\n                    <div className=\"message-data\">{chat.message}</div>\r\n                    {chat.senderName === userData.username && (\r\n                      <div className=\"avatar self\">{chat.senderName}</div>\r\n                    )}\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n\r\n              <div className=\"send-message\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"input-message\"\r\n                  placeholder=\"enter the message\"\r\n                  value={userData.message}\r\n                  onChange={handleMessage}\r\n                />\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"send-button\"\r\n                  onClick={sendValue}\r\n                >\r\n                  send\r\n                </button>\r\n              </div>\r\n            </div>\r\n          )}\r\n          {tab !== 'CHATROOM' && (\r\n            <div className=\"chat-content\">\r\n              <ul className=\"chat-messages\">\r\n                {[...privateChats.get(tab)].map((chat, index) => (\r\n                  <li\r\n                    className={`message ${chat.senderName === userData.username && 'self'\r\n                      }`}\r\n                    key={index}\r\n                  >\r\n                    {chat.senderName !== userData.username && (\r\n                      <div className=\"avatar\">{chat.senderName}</div>\r\n                    )}\r\n                    <div className=\"message-data\">{chat.message}</div>\r\n                    {chat.senderName === userData.username && (\r\n                      <div className=\"avatar self\">{chat.senderName}</div>\r\n                    )}\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n\r\n              <div className=\"send-message\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"input-message\"\r\n                  placeholder=\"enter the message\"\r\n                  value={userData.message}\r\n                  onChange={handleMessage}\r\n                />\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"send-button\"\r\n                  onClick={sendPrivateValue}\r\n                >\r\n                  send\r\n                </button>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatRoom;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}