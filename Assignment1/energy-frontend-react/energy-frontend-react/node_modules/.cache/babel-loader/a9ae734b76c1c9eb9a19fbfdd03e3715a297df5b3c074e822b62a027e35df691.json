{"ast":null,"code":"var _jsxFileName = \"D:\\\\AN4_SEMESTRUL1\\\\DS_Lab\\\\Assignment1\\\\energy-frontend-react\\\\energy-frontend-react\\\\src\\\\components\\\\ChatRoom.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { over } from 'stompjs';\nimport SockJS from 'sockjs-client';\nimport '../chat.css';\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar stompClient = null;\nconst ChatRoom = () => {\n  _s();\n  var _location$state;\n  const location = useLocation();\n  const userEmail = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.email) || '';\n  const [privateChats, setPrivateChats] = useState(new Map());\n  const [publicChats, setPublicChats] = useState([]);\n  const [tab, setTab] = useState('CHATROOM');\n  const [setLoggedInUsers] = useState([]);\n  const [typingStatus, setTypingStatus] = useState('');\n  const [setMessage] = useState('');\n  const [seenMessages] = useState(new Set());\n  const [userData, setUserData] = useState({\n    username: userEmail,\n    receivername: '',\n    connected: false,\n    message: ''\n  });\n  const sendTypingEvent = () => {\n    if (stompClient) {\n      const typingData = {\n        senderName: userData.username,\n        receiverName: tab,\n        status: 'TYPING'\n      };\n      stompClient.send('/app/typing', {}, JSON.stringify(typingData));\n    }\n  };\n  const handleTyping = event => {\n    setMessage(event.target.value);\n    sendTypingEvent();\n  };\n  useEffect(() => {\n    connect();\n    console.log(userData);\n    fetchLoggedInUsers();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const connect = () => {\n    let Sock = new SockJS('http://localhost:8084/ws');\n    stompClient = over(Sock);\n    stompClient.connect({}, onConnected, onError);\n  };\n  const handleMessage = event => {\n    const {\n      value\n    } = event.target;\n    setUserData({\n      ...userData,\n      message: value\n    });\n  };\n  const handleMessageView = messageId => {\n    if (stompClient) {\n      const seenData = {\n        senderName: userData.receivername,\n        // Sender's name\n        receiverName: userData.username,\n        // Receiver's name\n        status: 'SEEN',\n        // Indicate that the message has been seen\n        messageId: messageId\n      };\n      stompClient.send('/app/seen', {}, JSON.stringify(seenData)); // Send \"seen\" notification to the sender\n    }\n  };\n\n  /*#__PURE__*/_jsxDEV(\"input\", {\n    type: \"text\",\n    className: \"input-message\",\n    placeholder: \"Enter the message\",\n    value: userData.message,\n    onChange: handleMessage,\n    onFocus: handleMessageView,\n    onKeyDown: handleTyping\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 3\n  }, this);\n  const fetchLoggedInUsers = () => {\n    const token = localStorage.getItem('token');\n    fetch('http://localhost:8082/user/getLoggedInUsers', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      }\n    }).then(response => response.json()).then(data => {\n      setLoggedInUsers(data); // Update the state with logged-in users' data\n    }).catch(error => {\n      console.error('Error fetching logged-in users:', error);\n    });\n  };\n  const onConnected = () => {\n    setUserData({\n      ...userData,\n      connected: true\n    });\n    stompClient.subscribe('/chatroom/public', onMessageReceived);\n    stompClient.subscribe('/user/' + userData.username + '/private', onPrivateMessage);\n    stompClient.subscribe('/topic/typing', onTypingReceived);\n    userJoin();\n  };\n  const userJoin = () => {\n    var chatMessage = {\n      senderName: userData.username,\n      status: 'JOIN'\n    };\n    stompClient.send('/app/message', {}, JSON.stringify(chatMessage));\n  };\n  const onError = err => {\n    console.log(err);\n  };\n  const onMessageReceived = payload => {\n    var payloadData = JSON.parse(payload.body);\n    switch (payloadData.status) {\n      case \"JOIN\":\n        if (!privateChats.get(payloadData.senderName)) {\n          privateChats.set(payloadData.senderName, []);\n          setLoggedInUsers(prevUsers => [...prevUsers, payloadData.senderName]);\n        }\n        break;\n      case \"MESSAGE\":\n        publicChats.push(payloadData);\n        setPublicChats([...publicChats]);\n        break;\n    }\n  };\n  const onPrivateMessage = payload => {\n    var payloadData = JSON.parse(payload.body);\n    const senderChats = privateChats.get(payloadData.senderName) || [];\n    const updatedChats = [...senderChats, payloadData];\n    setPrivateChats(new Map(privateChats.set(payloadData.senderName, updatedChats)));\n    setTypingStatus('');\n  };\n  const sendValue = () => {\n    if (stompClient) {\n      var chatMessage = {\n        senderName: userData.username,\n        message: userData.message,\n        status: 'MESSAGE'\n      };\n      console.log(chatMessage);\n      stompClient.send('/app/message', {}, JSON.stringify(chatMessage));\n      setUserData({\n        ...userData,\n        message: ''\n      });\n      setTypingStatus('');\n    }\n  };\n  const sendPrivateValue = () => {\n    if (stompClient && userData.username !== tab) {\n      var chatMessage = {\n        senderName: userData.username,\n        receiverName: tab,\n        message: userData.message,\n        status: 'MESSAGE'\n      };\n      if (userData.username !== tab) {\n        privateChats.get(tab).push(chatMessage);\n        setPrivateChats(new Map(privateChats));\n      }\n      stompClient.send('/app/private-message', {}, JSON.stringify(chatMessage));\n      setUserData({\n        ...userData,\n        message: ''\n      });\n      setTypingStatus('');\n    }\n  };\n  const onTypingReceived = payload => {\n    const typingData = JSON.parse(payload.body);\n    if (typingData.status === 'TYPING') {\n      if (tab === 'CHATROOM' && typingData.receiverName === 'CHATROOM') {\n        setTypingStatus(typingData.senderName === userData.username ? '' : `${typingData.senderName} is typing...`);\n      } else if (typingData.receiverName === userData.username) {\n        setTypingStatus(`${typingData.senderName} is typing...`);\n      } else {\n        setTypingStatus('');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: stompClient && userData.connected ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"member-list\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => {\n              setTab('CHATROOM');\n            },\n            className: `member ${tab === 'CHATROOM' && 'active'}`,\n            children: \"Chatroom\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 15\n          }, this), [...privateChats.keys()].map((name, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => {\n              setTab(name);\n            },\n            className: `member ${tab === name && 'active'}`,\n            children: name\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 11\n      }, this), tab === 'CHATROOM' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"chat-messages\",\n          children: publicChats.map((chat, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: `message ${chat.senderName === userData.username && 'self'}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: `message ${chat.senderName === userData.username && 'self'}`,\n              onClick: handleMessageView(chat.id),\n              children: [chat.message, seenMessages.has(chat.id) && /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Seen\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 53\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 21\n            }, this), chat.senderName !== userData.username && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"avatar\",\n              children: chat.senderName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-data\",\n              children: chat.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 21\n            }, this), chat.senderName === userData.username && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"avatar self\",\n              children: chat.senderName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 23\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"typing-indicator\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: typingStatus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"send-message\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"input-message\",\n            placeholder: \"enter the message\",\n            value: userData.message,\n            onChange: handleMessage,\n            onKeyDown: handleTyping\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"send-button\",\n            onClick: sendValue,\n            children: \"send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 13\n      }, this), tab !== 'CHATROOM' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"chat-messages\",\n          children: [...privateChats.get(tab)].map((chat, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: `message ${chat.senderName === userData.username && 'self'}`,\n            children: [chat.senderName !== userData.username && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"avatar\",\n              children: chat.senderName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-data\",\n              children: chat.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 21\n            }, this), chat.senderName === userData.username && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"avatar self\",\n              children: chat.senderName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 23\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"typing-indicator\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: typingStatus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"send-message\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"input-message\",\n            placeholder: \"enter the message\",\n            value: userData.message,\n            onChange: handleMessage,\n            onKeyDown: handleTyping\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"send-button\",\n            onClick: sendPrivateValue,\n            children: \"send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 9\n    }, this) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 200,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatRoom, \"Fytzc3qVg9tZTzzauk6PAAB7Yw0=\", false, function () {\n  return [useLocation];\n});\n_c = ChatRoom;\nexport default ChatRoom;\nvar _c;\n$RefreshReg$(_c, \"ChatRoom\");","map":{"version":3,"names":["React","useEffect","useState","over","SockJS","useLocation","jsxDEV","_jsxDEV","stompClient","ChatRoom","_s","_location$state","location","userEmail","state","email","privateChats","setPrivateChats","Map","publicChats","setPublicChats","tab","setTab","setLoggedInUsers","typingStatus","setTypingStatus","setMessage","seenMessages","Set","userData","setUserData","username","receivername","connected","message","sendTypingEvent","typingData","senderName","receiverName","status","send","JSON","stringify","handleTyping","event","target","value","connect","console","log","fetchLoggedInUsers","Sock","onConnected","onError","handleMessage","handleMessageView","messageId","seenData","type","className","placeholder","onChange","onFocus","onKeyDown","fileName","_jsxFileName","lineNumber","columnNumber","token","localStorage","getItem","fetch","method","headers","then","response","json","data","catch","error","subscribe","onMessageReceived","onPrivateMessage","onTypingReceived","userJoin","chatMessage","err","payload","payloadData","parse","body","get","set","prevUsers","push","senderChats","updatedChats","sendValue","sendPrivateValue","children","onClick","keys","map","name","index","chat","id","has","_c","$RefreshReg$"],"sources":["D:/AN4_SEMESTRUL1/DS_Lab/Assignment1/energy-frontend-react/energy-frontend-react/src/components/ChatRoom.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { over } from 'stompjs';\r\nimport SockJS from 'sockjs-client';\r\nimport '../chat.css';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nvar stompClient = null;\r\n\r\nconst ChatRoom = () => {\r\n  const location = useLocation();\r\n  const userEmail = location.state?.email || '';\r\n  const [privateChats, setPrivateChats] = useState(new Map());\r\n  const [publicChats, setPublicChats] = useState([]);\r\n  const [tab, setTab] = useState('CHATROOM');\r\n  const [setLoggedInUsers] = useState([]);\r\n  const [typingStatus, setTypingStatus] = useState('');\r\n  const [setMessage] = useState('');\r\n  const [seenMessages] = useState(new Set());\r\n\r\n  const [userData, setUserData] = useState({\r\n    username: userEmail,\r\n    receivername: '',\r\n    connected: false,\r\n    message: '',\r\n  });\r\n\r\n\r\n  const sendTypingEvent = () => {\r\n    if (stompClient) {\r\n      const typingData = {\r\n        senderName: userData.username,\r\n        receiverName: tab,\r\n        status: 'TYPING',\r\n      };\r\n      stompClient.send('/app/typing', {}, JSON.stringify(typingData));\r\n    }\r\n  };\r\n\r\n  const handleTyping = (event) => {\r\n    setMessage(event.target.value);\r\n    sendTypingEvent();\r\n  };\r\n\r\n  useEffect(() => {\r\n    connect();\r\n    console.log(userData);\r\n    fetchLoggedInUsers();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const connect = () => {\r\n    let Sock = new SockJS('http://localhost:8084/ws');\r\n    stompClient = over(Sock);\r\n    stompClient.connect({}, onConnected, onError);\r\n  };\r\n\r\n  const handleMessage = (event) => {\r\n    const { value } = event.target;\r\n    setUserData({ ...userData, message: value });\r\n  };\r\n\r\n\r\n  const handleMessageView = (messageId) => {\r\n    if (stompClient) {\r\n      const seenData = {\r\n        senderName: userData.receivername, // Sender's name\r\n        receiverName: userData.username, // Receiver's name\r\n        status: 'SEEN', // Indicate that the message has been seen\r\n        messageId: messageId,\r\n      };\r\n      stompClient.send('/app/seen', {}, JSON.stringify(seenData)); // Send \"seen\" notification to the sender\r\n    }\r\n  };\r\n\r\n  <input\r\n    type=\"text\"\r\n    className=\"input-message\"\r\n    placeholder=\"Enter the message\"\r\n    value={userData.message}\r\n    onChange={handleMessage}\r\n    onFocus={handleMessageView}\r\n    onKeyDown={handleTyping}\r\n  />\r\n\r\n\r\n  const fetchLoggedInUsers = () => {\r\n    const token = localStorage.getItem('token');\r\n    fetch('http://localhost:8082/user/getLoggedInUsers', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${token}`,\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setLoggedInUsers(data); // Update the state with logged-in users' data\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching logged-in users:', error);\r\n      });\r\n  };\r\n\r\n  const onConnected = () => {\r\n    setUserData({ ...userData, connected: true });\r\n    stompClient.subscribe('/chatroom/public', onMessageReceived);\r\n    stompClient.subscribe('/user/' + userData.username + '/private', onPrivateMessage);\r\n    stompClient.subscribe('/topic/typing', onTypingReceived);\r\n    userJoin();\r\n  };\r\n\r\n  const userJoin = () => {\r\n    var chatMessage = {\r\n      senderName: userData.username,\r\n      status: 'JOIN',\r\n    };\r\n    stompClient.send('/app/message', {}, JSON.stringify(chatMessage));\r\n  };\r\n\r\n  const onError = (err) => {\r\n    console.log(err);\r\n  };\r\n\r\n  const onMessageReceived = (payload) => {\r\n    var payloadData = JSON.parse(payload.body);\r\n    switch (payloadData.status) {\r\n      case \"JOIN\":\r\n        if (!privateChats.get(payloadData.senderName)) {\r\n          privateChats.set(payloadData.senderName, []);\r\n          setLoggedInUsers((prevUsers) => [...prevUsers, payloadData.senderName]);\r\n        }\r\n        break;\r\n      case \"MESSAGE\":\r\n        publicChats.push(payloadData);\r\n        setPublicChats([...publicChats]);\r\n        break;\r\n    }\r\n  };\r\n\r\n  const onPrivateMessage = (payload) => {\r\n    var payloadData = JSON.parse(payload.body);\r\n    const senderChats = privateChats.get(payloadData.senderName) || [];\r\n    const updatedChats = [...senderChats, payloadData];\r\n    setPrivateChats(new Map(privateChats.set(payloadData.senderName, updatedChats)));\r\n    setTypingStatus('');\r\n  };\r\n\r\n  const sendValue = () => {\r\n    if (stompClient) {\r\n      var chatMessage = {\r\n        senderName: userData.username,\r\n        message: userData.message,\r\n        status: 'MESSAGE',\r\n      };\r\n      console.log(chatMessage);\r\n      stompClient.send('/app/message', {}, JSON.stringify(chatMessage));\r\n      setUserData({ ...userData, message: '' });\r\n      setTypingStatus('');\r\n    }\r\n  };\r\n\r\n  const sendPrivateValue = () => {\r\n    if (stompClient && userData.username !== tab) {\r\n      var chatMessage = {\r\n        senderName: userData.username,\r\n        receiverName: tab,\r\n        message: userData.message,\r\n        status: 'MESSAGE',\r\n      };\r\n\r\n      if (userData.username !== tab) {\r\n        privateChats.get(tab).push(chatMessage);\r\n        setPrivateChats(new Map(privateChats));\r\n      }\r\n      stompClient.send('/app/private-message', {}, JSON.stringify(chatMessage));\r\n      setUserData({ ...userData, message: '' });\r\n      setTypingStatus('');\r\n    }\r\n  };\r\n\r\n  const onTypingReceived = (payload) => {\r\n    const typingData = JSON.parse(payload.body);\r\n    if (typingData.status === 'TYPING') {\r\n      if (tab === 'CHATROOM' && typingData.receiverName === 'CHATROOM') {\r\n        setTypingStatus(typingData.senderName === userData.username ? '' : `${typingData.senderName} is typing...`);\r\n      } else if (typingData.receiverName === userData.username) {\r\n        setTypingStatus(`${typingData.senderName} is typing...`);\r\n      } else {\r\n        setTypingStatus('');\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {stompClient && userData.connected ? (\r\n        <div className=\"chat-box\">\r\n          <div className=\"member-list\">\r\n            <ul>\r\n              <li\r\n                onClick={() => {\r\n                  setTab('CHATROOM');\r\n                }}\r\n                className={`member ${tab === 'CHATROOM' && 'active'}`}\r\n              >\r\n                Chatroom\r\n              </li>\r\n              {[...privateChats.keys()].map((name, index) => (\r\n                <li\r\n                  onClick={() => {\r\n                    setTab(name);\r\n                  }}\r\n                  className={`member ${tab === name && 'active'}`}\r\n                  key={index}\r\n                >\r\n                  {name}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n          {tab === 'CHATROOM' && (\r\n            <div className=\"chat-content\">\r\n              <ul className=\"chat-messages\">\r\n                {publicChats.map((chat, index) => (\r\n                  <li\r\n                    className={`message ${chat.senderName === userData.username && 'self'\r\n                      }`}\r\n                    key={index}\r\n                  >\r\n                    <div\r\n                      className={`message ${chat.senderName === userData.username && 'self'}`}\r\n                      onClick={handleMessageView(chat.id)}\r\n                      key={index}\r\n                    >\r\n                      {chat.message}\r\n                      {seenMessages.has(chat.id) && <span>Seen</span>}\r\n                    </div>\r\n                    {chat.senderName !== userData.username && (\r\n                      <div className=\"avatar\">{chat.senderName}</div>\r\n                    )}\r\n                    <div className=\"message-data\">{chat.message}</div>\r\n                    {chat.senderName === userData.username && (\r\n                      <div className=\"avatar self\">{chat.senderName}</div>\r\n                    )}\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n              <div className=\"typing-indicator\">\r\n                <p>{typingStatus}</p>\r\n              </div>\r\n              <div className=\"send-message\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"input-message\"\r\n                  placeholder=\"enter the message\"\r\n                  value={userData.message}\r\n                  onChange={handleMessage}\r\n                  onKeyDown={handleTyping}\r\n                />\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"send-button\"\r\n                  onClick={sendValue}\r\n                >\r\n                  send\r\n                </button>\r\n              </div>\r\n            </div>\r\n          )}\r\n          {tab !== 'CHATROOM' && (\r\n            <div className=\"chat-content\">\r\n              <ul className=\"chat-messages\">\r\n                {[...privateChats.get(tab)].map((chat, index) => (\r\n                  <li\r\n                    className={`message ${chat.senderName === userData.username && 'self'\r\n                      }`}\r\n                    key={index}\r\n                  >\r\n                    {chat.senderName !== userData.username && (\r\n                      <div className=\"avatar\">{chat.senderName}</div>\r\n                    )}\r\n                    <div className=\"message-data\">{chat.message}</div>\r\n                    {chat.senderName === userData.username && (\r\n                      <div className=\"avatar self\">{chat.senderName}</div>\r\n                    )}\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n              <div className=\"typing-indicator\">\r\n                <p>{typingStatus}</p>\r\n              </div>\r\n              <div className=\"send-message\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"input-message\"\r\n                  placeholder=\"enter the message\"\r\n                  value={userData.message}\r\n                  onChange={handleMessage}\r\n                  onKeyDown={handleTyping}\r\n                />\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"send-button\"\r\n                  onClick={sendPrivateValue}\r\n                >\r\n                  send\r\n                </button>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatRoom;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}