{"ast":null,"code":"var _jsxFileName = \"D:\\\\AN4_SEMESTRUL1\\\\DS_Lab\\\\Assignment1\\\\energy-frontend-react\\\\energy-frontend-react\\\\src\\\\components\\\\GetUsers.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../users-page.css';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GetUsers = () => {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [message, setMessage] = useState(null);\n  const [editedUser, setEditedUser] = useState(null);\n  const [addingUser, setAddingUser] = useState(false);\n  const [newUser, setNewUser] = useState({\n    username: '',\n    email: '',\n    password: ''\n  });\n  useEffect(() => {\n    // Fetch the list of users when the component mounts\n    fetchUsers();\n  }, []);\n  const fetchUsers = () => {\n    // Fetch the list of users from your backend\n    const token = localStorage.getItem('token');\n    fetch('http://localhost:8082/user/getUsers', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      }\n    }).then(response => {\n      if (response.status === 200) {\n        return response.json();\n      }\n      if (response.status === 401) {\n        alert(\"Unauthorized Access\");\n      } else {\n        throw new Error('Failed to fetch data');\n      }\n    }).then(data => {\n      setUsers(data);\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n  };\n  const handleEdit = user => {\n    setEditedUser(user);\n  };\n  const handleCancelEdit = () => {\n    setEditedUser(null);\n  };\n  const handleUpdate = () => {\n    const token = localStorage.getItem('token');\n    fetch('http://localhost:8082/user/update', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      },\n      body: JSON.stringify({\n        username: editedUser.username,\n        email: editedUser.email,\n        password: editedUser.password,\n        role: editedUser.role,\n        userId: editedUser.userId\n      })\n    }).then(response => {\n      if (response.status === 200) {\n        toast.success('User updated successfully.', {\n          style: {\n            background: '#90d490'\n          },\n          bodyClassName: 'custom-toast-content'\n        });\n        setEditedUser(null);\n        fetchUsers();\n      } else {\n        toast.error('Failed to update user.', {\n          style: {\n            background: 'red'\n          }\n        });\n      }\n    }).catch(error => {\n      showMessage('An error occurred');\n    });\n  };\n  const showMessage = text => {\n    setMessage(text);\n    setTimeout(() => {\n      setMessage(null);\n    }, 2000);\n  };\n  const handleDelete = userId => {\n    const token = localStorage.getItem('token');\n\n    // Fetch the list of devices associated with the user\n    fetch(`http://localhost:8081/device/getDevicesByUserId/${userId}`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      }\n    }).then(response => {\n      if (response.status === 200) {\n        return response.json();\n      } else {\n        return null; // User is not associated with any devices\n      }\n    }).then(devices => {\n      if (devices && devices.length > 0) {\n        // User is associated with devices, so delete them first\n        const deviceDeletionPromises = devices.map(device => {\n          return fetch(`http://localhost:8081/device/delete/${device.deviceId}`, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n              'Authorization': `Bearer ${token}`\n            }\n          });\n        });\n\n        // Wait for all device deletions to complete\n        return Promise.all(deviceDeletionPromises);\n      } else {\n        // User is not associated with any devices, proceed to delete the user\n        return null;\n      }\n    }).then(deviceDeletionResponses => {\n      if (deviceDeletionResponses) {\n        // Check if all device deletions were successful\n        const allDevicesDeleted = deviceDeletionResponses.every(response => response.status === 200);\n        if (allDevicesDeleted) {\n          // All devices were deleted, now delete the user\n          return fetch(`http://localhost:8082/user/delete/${userId}`, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n              'Authorization': `Bearer ${token}`\n            }\n          });\n        } else {\n          // Some device deletions failed\n          throw new Error('Failed to delete some devices');\n        }\n      } else {\n        // User is not associated with any devices, proceed to delete the user\n        return fetch(`http://localhost:8082/user/delete/${userId}`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n          }\n        });\n      }\n    }).then(userDeletionResponse => {\n      if (userDeletionResponse && userDeletionResponse.status === 200) {\n        toast.success('User and associated devices deleted successfully.', {\n          style: {\n            background: '#90d490'\n          },\n          bodyClassName: 'custom-toast-content'\n        });\n        fetchUsers();\n      } else {\n        toast.error('Failed to delete user or associated devices.', {\n          style: {\n            background: 'red'\n          }\n        });\n      }\n    }).catch(error => {\n      showMessage('An error occurred');\n    });\n  };\n  const handleAddUser = () => {\n    setAddingUser(true);\n  };\n  const handleSaveUser = () => {\n    const token = localStorage.getItem('token');\n    const newUserData = {\n      username: newUser.username,\n      email: newUser.email,\n      password: newUser.password\n    };\n    fetch('http://localhost:8082/user/signup', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      },\n      body: JSON.stringify(newUserData)\n    }).then(response => {\n      if (response.status === 200) {\n        toast.success('User added successfully.', {\n          style: {\n            background: '#90d490'\n          },\n          bodyClassName: 'custom-toast-content'\n        });\n        fetchUsers();\n        setAddingUser(false); // Close the form\n      } else {\n        toast.error('Failed to add user.', {\n          style: {\n            background: 'red'\n          }\n        });\n      }\n    }).catch(error => {\n      showMessage('An error occurred');\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"List of Users\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 13\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"edit-delete-buttons\",\n      onClick: handleAddUser,\n      children: \"Add User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 13\n    }, this), addingUser && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Add New User:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"UserName:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newUser.username,\n        onChange: e => setNewUser({\n          ...newUser,\n          username: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newUser.email,\n        onChange: e => setNewUser({\n          ...newUser,\n          email: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newUser.password,\n        onChange: e => setNewUser({\n          ...newUser,\n          password: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"edit-delete-buttons\",\n        type: \"button\",\n        onClick: handleSaveUser,\n        children: \"Save User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-columns\",\n      children: users && users.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"User: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 25\n        }, this), editedUser && editedUser.userId === user.userId ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Username:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: editedUser.username,\n            onChange: e => setEditedUser({\n              ...editedUser,\n              username: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: editedUser.email,\n            onChange: e => setEditedUser({\n              ...editedUser,\n              email: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Role:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: editedUser.role,\n            onChange: e => setEditedUser({\n              ...editedUser,\n              role: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Id:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: editedUser.userId,\n            onChange: e => setEditedUser({\n              ...editedUser,\n              userId: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"edit-delete-buttons\",\n            type: \"button\",\n            onClick: handleUpdate,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"edit-delete-buttons\",\n            type: \"button\",\n            onClick: handleCancelEdit,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Username: \", user.username]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Email: \", user.email]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Id: \", user.userId]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"edit-delete-buttons\",\n              type: \"button\",\n              onClick: () => handleEdit(user),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"edit-delete-buttons\",\n              type: \"button\",\n              onClick: () => handleDelete(user.userId),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 29\n        }, this)]\n      }, user.userId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 230,\n    columnNumber: 9\n  }, this);\n};\n_s(GetUsers, \"/r0PstwkFLLF+G8HS2vO/dpJSXI=\");\n_c = GetUsers;\nexport default GetUsers;\nvar _c;\n$RefreshReg$(_c, \"GetUsers\");","map":{"version":3,"names":["React","useState","useEffect","toast","jsxDEV","_jsxDEV","GetUsers","_s","users","setUsers","message","setMessage","editedUser","setEditedUser","addingUser","setAddingUser","newUser","setNewUser","username","email","password","fetchUsers","token","localStorage","getItem","fetch","method","headers","then","response","status","json","alert","Error","data","catch","error","console","handleEdit","user","handleCancelEdit","handleUpdate","body","JSON","stringify","role","userId","success","style","background","bodyClassName","showMessage","text","setTimeout","handleDelete","devices","length","deviceDeletionPromises","map","device","deviceId","Promise","all","deviceDeletionResponses","allDevicesDeleted","every","userDeletionResponse","handleAddUser","handleSaveUser","newUserData","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","type","value","onChange","e","target","_c","$RefreshReg$"],"sources":["D:/AN4_SEMESTRUL1/DS_Lab/Assignment1/energy-frontend-react/energy-frontend-react/src/components/GetUsers.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport '../users-page.css';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst GetUsers = () => {\r\n    const [users, setUsers] = useState([]);\r\n    const [message, setMessage] = useState(null);\r\n    const [editedUser, setEditedUser] = useState(null);\r\n    const [addingUser, setAddingUser] = useState(false); \r\n    const [newUser, setNewUser] = useState({\r\n        username: '',\r\n        email: '',\r\n        password: '',\r\n    });\r\n\r\n    useEffect(() => {\r\n        // Fetch the list of users when the component mounts\r\n        fetchUsers();\r\n    }, []);\r\n\r\n    const fetchUsers = () => {\r\n        // Fetch the list of users from your backend\r\n        const token = localStorage.getItem('token');\r\n        fetch('http://localhost:8082/user/getUsers', {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`,\r\n            },\r\n        })\r\n            .then((response) => {\r\n                if (response.status === 200) {\r\n                    return response.json();\r\n                }\r\n                if (response.status === 401) {\r\n                    alert(\"Unauthorized Access\")\r\n                }\r\n                else {\r\n                    throw new Error('Failed to fetch data');\r\n                }\r\n            })\r\n            .then((data) => {\r\n                setUsers(data);\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error:', error);\r\n            });\r\n    };\r\n\r\n    const handleEdit = (user) => {\r\n        setEditedUser(user);\r\n    };\r\n\r\n    const handleCancelEdit = () => {\r\n        setEditedUser(null);\r\n    };\r\n\r\n    const handleUpdate = () => {\r\n        const token = localStorage.getItem('token');\r\n        fetch('http://localhost:8082/user/update', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`,\r\n            },\r\n            body: JSON.stringify({\r\n                username: editedUser.username,\r\n                email: editedUser.email,\r\n                password: editedUser.password,\r\n                role: editedUser.role,\r\n                userId: editedUser.userId\r\n            }),\r\n        })\r\n            .then((response) => {\r\n                if (response.status === 200) {\r\n                    toast.success('User updated successfully.', {\r\n                        style: { background: '#90d490' },\r\n                        bodyClassName: 'custom-toast-content',\r\n                    });\r\n                    setEditedUser(null);\r\n                    fetchUsers();\r\n                }\r\n                else {\r\n                    toast.error('Failed to update user.', {\r\n                        style: { background: 'red' },\r\n                    });\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                showMessage('An error occurred');\r\n            });\r\n    };\r\n\r\n    const showMessage = (text) => {\r\n        setMessage(text);\r\n\r\n        setTimeout(() => {\r\n            setMessage(null);\r\n        }, 2000);\r\n    };\r\n\r\n    const handleDelete = (userId) => {\r\n        const token = localStorage.getItem('token');\r\n    \r\n        // Fetch the list of devices associated with the user\r\n        fetch(`http://localhost:8081/device/getDevicesByUserId/${userId}`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`,\r\n            },\r\n        })\r\n        .then((response) => {\r\n            if (response.status === 200) {\r\n                return response.json();\r\n            } else {\r\n                return null; // User is not associated with any devices\r\n            }\r\n        })\r\n        .then((devices) => {\r\n            if (devices && devices.length > 0) {\r\n                // User is associated with devices, so delete them first\r\n                const deviceDeletionPromises = devices.map((device) => {\r\n                    return fetch(`http://localhost:8081/device/delete/${device.deviceId}`, {\r\n                        method: 'POST',\r\n                        headers: {\r\n                            'Content-Type': 'application/json',\r\n                            'Authorization': `Bearer ${token}`,\r\n                        },\r\n                    });\r\n                });\r\n    \r\n                // Wait for all device deletions to complete\r\n                return Promise.all(deviceDeletionPromises);\r\n            } else {\r\n                // User is not associated with any devices, proceed to delete the user\r\n                return null;\r\n            }\r\n        })\r\n        .then((deviceDeletionResponses) => {\r\n            if (deviceDeletionResponses) {\r\n                // Check if all device deletions were successful\r\n                const allDevicesDeleted = deviceDeletionResponses.every((response) => response.status === 200);\r\n                if (allDevicesDeleted) {\r\n                    // All devices were deleted, now delete the user\r\n                    return fetch(`http://localhost:8082/user/delete/${userId}`, {\r\n                        method: 'POST',\r\n                        headers: {\r\n                            'Content-Type': 'application/json',\r\n                            'Authorization': `Bearer ${token}`,\r\n                        },\r\n                    });\r\n                } else {\r\n                    // Some device deletions failed\r\n                    throw new Error('Failed to delete some devices');\r\n                }\r\n            } else {\r\n                // User is not associated with any devices, proceed to delete the user\r\n                return fetch(`http://localhost:8082/user/delete/${userId}`, {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'Authorization': `Bearer ${token}`,\r\n                    },\r\n                });\r\n            }\r\n        })\r\n        .then((userDeletionResponse) => {\r\n            if (userDeletionResponse && userDeletionResponse.status === 200) {\r\n                toast.success('User and associated devices deleted successfully.', {\r\n                    style: { background: '#90d490' },\r\n                    bodyClassName: 'custom-toast-content',\r\n                });\r\n                fetchUsers();\r\n            } else {\r\n                toast.error('Failed to delete user or associated devices.', {\r\n                    style: { background: 'red' },\r\n                });\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            showMessage('An error occurred');\r\n        });\r\n    };\r\n    \r\n    \r\n\r\n\r\n    const handleAddUser = () => {\r\n        setAddingUser(true);\r\n    };\r\n    \r\n    const handleSaveUser = () => {\r\n    \r\n        const token = localStorage.getItem('token');\r\n        const newUserData = {\r\n            username: newUser.username,\r\n            email: newUser.email,\r\n            password: newUser.password,\r\n        };\r\n\r\n        fetch('http://localhost:8082/user/signup', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`,\r\n            },\r\n            body: JSON.stringify(newUserData),\r\n        })\r\n            .then((response) => {\r\n                if (response.status === 200) { \r\n                    toast.success('User added successfully.', {\r\n                        style: { background: '#90d490' },\r\n                        bodyClassName: 'custom-toast-content',\r\n                    });\r\n                    fetchUsers();\r\n                    setAddingUser(false); // Close the form\r\n                } else {\r\n                    toast.error('Failed to add user.', {\r\n                        style: { background: 'red' },\r\n                    });\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                showMessage('An error occurred');\r\n            });\r\n        };\r\n\r\n    return (\r\n        <div>\r\n            <h2>List of Users</h2>\r\n            {message && <p className=\"message\">{message}</p>}\r\n            <button className=\"edit-delete-buttons\" onClick={handleAddUser}>\r\n                Add User\r\n            </button>\r\n            {addingUser && (\r\n                <div className=\"user-card\">\r\n                <h3>Add New User:</h3>\r\n                <label>UserName:</label>\r\n            <input\r\n                type=\"text\"\r\n                value={newUser.username}\r\n                onChange={(e) =>\r\n                    setNewUser({\r\n                        ...newUser,\r\n                        username: e.target.value,\r\n                    })\r\n                }\r\n            />\r\n            <label>Email:</label>\r\n            <input\r\n                type=\"text\"\r\n                value={newUser.email}\r\n                onChange={(e) =>\r\n                    setNewUser({\r\n                        ...newUser,\r\n                        email: e.target.value,\r\n                    })\r\n                }\r\n            />\r\n            <label>Password:</label>\r\n            <input\r\n                type=\"text\"\r\n                value={newUser.password}\r\n                onChange={(e) =>\r\n                    setNewUser({\r\n                        ...newUser,\r\n                        password: e.target.value,\r\n                    })\r\n                }\r\n            />\r\n            <button\r\n                        className=\"edit-delete-buttons\"\r\n                        type=\"button\"\r\n                        onClick={handleSaveUser}\r\n                    >\r\n                        Save User\r\n                    </button>\r\n                </div>\r\n            )}\r\n            <div className=\"user-columns\">\r\n                {users && users.map((user) => (\r\n                    <div className=\"user-card\" key={user.userId}>\r\n                        <h3>User: </h3>\r\n                        {editedUser && editedUser.userId === user.userId ? (\r\n                            <div>\r\n                                <label>Username:</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    value={editedUser.username}\r\n                                    onChange={(e) =>\r\n                                        setEditedUser({ ...editedUser, username: e.target.value })\r\n                                    }\r\n                                />\r\n                                <label>Email:</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    value={editedUser.email}\r\n                                    onChange={(e) =>\r\n                                        setEditedUser({ ...editedUser, email: e.target.value })\r\n                                    }\r\n                                />\r\n                                <label>Role:</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    value={editedUser.role}\r\n                                    onChange={(e) =>\r\n                                        setEditedUser({ ...editedUser, role: e.target.value })\r\n                                    }\r\n                                />\r\n                                <label>Id:</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    value={editedUser.userId}\r\n                                    onChange={(e) =>\r\n                                        setEditedUser({ ...editedUser, userId: e.target.value })\r\n                                    }\r\n                                />\r\n                                <button\r\n                                    className=\"edit-delete-buttons\"\r\n                                    type=\"button\"\r\n                                    onClick={handleUpdate}\r\n                                >\r\n                                    Save\r\n                                </button>\r\n                                <button\r\n                                    className=\"edit-delete-buttons\"\r\n                                    type=\"button\"\r\n                                    onClick={handleCancelEdit}\r\n                                >\r\n                                    Cancel\r\n                                </button>\r\n                            </div>\r\n                        ) : (\r\n                            <div>\r\n                                <p>Username: {user.username}</p>\r\n                                <p>Email: {user.email}</p>\r\n                                <p>Id: {user.userId}</p>\r\n                                <div>\r\n                                    <button\r\n                                        className=\"edit-delete-buttons\"\r\n                                        type=\"button\"\r\n                                        onClick={() => handleEdit(user)}\r\n                                    >\r\n                                        Edit\r\n                                    </button>\r\n                                    <button\r\n                                        className=\"edit-delete-buttons\"\r\n                                        type=\"button\"\r\n                                        onClick={() => handleDelete(user.userId)}\r\n                                    >\r\n                                        Delete\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GetUsers;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}