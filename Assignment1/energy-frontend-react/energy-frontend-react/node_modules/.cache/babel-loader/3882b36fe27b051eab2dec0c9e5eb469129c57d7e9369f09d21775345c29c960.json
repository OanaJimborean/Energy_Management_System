{"ast":null,"code":"var _jsxFileName = \"D:\\\\AN4_SEMESTRUL1\\\\DS_Lab\\\\Assignment1\\\\energy-frontend-react\\\\energy-frontend-react\\\\src\\\\components\\\\GetUsers.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../users-page.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GetUsers = () => {\n  _s();\n  const [users, setUsers] = useState([]);\n  useEffect(() => {\n    // Fetch the list of users when the component mounts\n    fetchUsers();\n  }, []);\n  const fetchUsers = () => {\n    // Fetch the list of users from your backend\n    const token = localStorage.getItem('token');\n    fetch('http://localhost:8082/user/getUsers', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      }\n    }).then(response => {\n      if (response.status === 200) {\n        return response.json();\n      } else {\n        throw new Error('Failed to fetch data');\n      }\n    }).then(data => {\n      setUsers(data);\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n  };\n  const handleEdit = userId => {\n    // Handle edit action, e.g., navigate to an edit page.\n  };\n  const handleDelete = userId => {\n    // Here, you should make a DELETE request to your backend to delete the user with the specified userId.\n    // You can show a confirmation dialog before sending the request, if needed.\n\n    // Example DELETE request using fetch:\n    const token = localStorage.getItem('token');\n    fetch(`http://localhost:8082/user/delete/${userId}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      }\n    }).then(response => {\n      if (response.status === 200) {\n        // User deleted successfully, you can handle this as needed.\n        showMessage('User deleted successfully.');\n        console.log('User deleted successfully.');\n        // After deletion, you might want to fetch the updated user list to reflect the changes.\n        fetchUsers();\n      } else {\n        // Handle the error, e.g., show an error message to the user.\n        console.error('Failed to delete user');\n      }\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"See All Users\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-columns\",\n      children: users.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"User: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Name: \", user.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Email: \", user.email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"edit-delete-buttons\",\n            type: \"button\",\n            onClick: () => handleEdit(user.userId),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"edit-delete-buttons\",\n            type: \"button\",\n            onClick: () => handleDelete(user.userId),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this)]\n      }, user.userId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(GetUsers, \"JadZszbqna06PpJs9hMo7Hl/LOY=\");\n_c = GetUsers;\nexport default GetUsers;\nvar _c;\n$RefreshReg$(_c, \"GetUsers\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","GetUsers","_s","users","setUsers","fetchUsers","token","localStorage","getItem","fetch","method","headers","then","response","status","json","Error","data","catch","error","console","handleEdit","userId","handleDelete","showMessage","log","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","user","name","email","type","onClick","_c","$RefreshReg$"],"sources":["D:/AN4_SEMESTRUL1/DS_Lab/Assignment1/energy-frontend-react/energy-frontend-react/src/components/GetUsers.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport '../users-page.css';\r\n\r\nconst GetUsers = () => {\r\n  const [users, setUsers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Fetch the list of users when the component mounts\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  const fetchUsers = () => {\r\n    // Fetch the list of users from your backend\r\n    const token = localStorage.getItem('token');\r\n    fetch('http://localhost:8082/user/getUsers', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${token}`,\r\n      },\r\n    })\r\n      .then((response) => {\r\n        if (response.status === 200) {\r\n          return response.json();\r\n        } else {\r\n          throw new Error('Failed to fetch data');\r\n        }\r\n      })\r\n      .then((data) => {\r\n        setUsers(data);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error:', error);\r\n      });\r\n  };\r\n\r\n  const handleEdit = (userId) => {\r\n    // Handle edit action, e.g., navigate to an edit page.\r\n  };\r\n\r\n  const handleDelete = (userId) => {\r\n    // Here, you should make a DELETE request to your backend to delete the user with the specified userId.\r\n    // You can show a confirmation dialog before sending the request, if needed.\r\n  \r\n    // Example DELETE request using fetch:\r\n    const token = localStorage.getItem('token');\r\n    fetch(`http://localhost:8082/user/delete/${userId}`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${token}`,\r\n      },\r\n    })\r\n      .then((response) => {\r\n        if (response.status === 200) {\r\n          // User deleted successfully, you can handle this as needed.\r\n          showMessage('User deleted successfully.');\r\n          console.log('User deleted successfully.');\r\n          // After deletion, you might want to fetch the updated user list to reflect the changes.\r\n          fetchUsers();\r\n        } else {\r\n          // Handle the error, e.g., show an error message to the user.\r\n          console.error('Failed to delete user');\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error:', error);\r\n      });\r\n  };\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <h2>See All Users</h2>\r\n      <div className=\"user-columns\">\r\n        {users.map((user) => (\r\n          <div className=\"user-card\" key={user.userId}>\r\n            <h3>User: </h3>\r\n            <p>Name: {user.name}</p>\r\n            <p>Email: {user.email}</p> \r\n            <div>\r\n            <button className=\"edit-delete-buttons\" type=\"button\" onClick={() => handleEdit(user.userId)}>Edit</button>\r\n              <button className=\"edit-delete-buttons\" type=\"button\" onClick={() => handleDelete(user.userId)}>Delete</button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GetUsers;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3B,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACd;IACAO,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,UAAU,GAAGA,CAAA,KAAM;IACvB;IACA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3CC,KAAK,CAAC,qCAAqC,EAAE;MAC3CC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClC,eAAe,EAAG,UAASL,KAAM;MACnC;IACF,CAAC,CAAC,CACCM,IAAI,CAAEC,QAAQ,IAAK;MAClB,IAAIA,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;QAC3B,OAAOD,QAAQ,CAACE,IAAI,CAAC,CAAC;MACxB,CAAC,MAAM;QACL,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;MACzC;IACF,CAAC,CAAC,CACDJ,IAAI,CAAEK,IAAI,IAAK;MACdb,QAAQ,CAACa,IAAI,CAAC;IAChB,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAChC,CAAC,CAAC;EACN,CAAC;EAED,MAAME,UAAU,GAAIC,MAAM,IAAK;IAC7B;EAAA,CACD;EAED,MAAMC,YAAY,GAAID,MAAM,IAAK;IAC/B;IACA;;IAEA;IACA,MAAMhB,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3CC,KAAK,CAAE,qCAAoCa,MAAO,EAAC,EAAE;MACnDZ,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClC,eAAe,EAAG,UAASL,KAAM;MACnC;IACF,CAAC,CAAC,CACCM,IAAI,CAAEC,QAAQ,IAAK;MAClB,IAAIA,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;QAC3B;QACAU,WAAW,CAAC,4BAA4B,CAAC;QACzCJ,OAAO,CAACK,GAAG,CAAC,4BAA4B,CAAC;QACzC;QACApB,UAAU,CAAC,CAAC;MACd,CAAC,MAAM;QACL;QACAe,OAAO,CAACD,KAAK,CAAC,uBAAuB,CAAC;MACxC;IACF,CAAC,CAAC,CACDD,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAChC,CAAC,CAAC;EACN,CAAC;EAGD,oBACEnB,OAAA;IAAA0B,QAAA,gBACE1B,OAAA;MAAA0B,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtB9B,OAAA;MAAK+B,SAAS,EAAC,cAAc;MAAAL,QAAA,EAC1BvB,KAAK,CAAC6B,GAAG,CAAEC,IAAI,iBACdjC,OAAA;QAAK+B,SAAS,EAAC,WAAW;QAAAL,QAAA,gBACxB1B,OAAA;UAAA0B,QAAA,EAAI;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACf9B,OAAA;UAAA0B,QAAA,GAAG,QAAM,EAACO,IAAI,CAACC,IAAI;QAAA;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACxB9B,OAAA;UAAA0B,QAAA,GAAG,SAAO,EAACO,IAAI,CAACE,KAAK;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC1B9B,OAAA;UAAA0B,QAAA,gBACA1B,OAAA;YAAQ+B,SAAS,EAAC,qBAAqB;YAACK,IAAI,EAAC,QAAQ;YAACC,OAAO,EAAEA,CAAA,KAAMhB,UAAU,CAACY,IAAI,CAACX,MAAM,CAAE;YAAAI,QAAA,EAAC;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACzG9B,OAAA;YAAQ+B,SAAS,EAAC,qBAAqB;YAACK,IAAI,EAAC,QAAQ;YAACC,OAAO,EAAEA,CAAA,KAAMd,YAAY,CAACU,IAAI,CAACX,MAAM,CAAE;YAAAI,QAAA,EAAC;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5G,CAAC;MAAA,GAPwBG,IAAI,CAACX,MAAM;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAQtC,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC5B,EAAA,CAtFID,QAAQ;AAAAqC,EAAA,GAARrC,QAAQ;AAwFd,eAAeA,QAAQ;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}