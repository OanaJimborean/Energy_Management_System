{"ast":null,"code":"var _jsxFileName = \"D:\\\\AN4_SEMESTRUL1\\\\DS_Lab\\\\Assignment1\\\\energy-frontend-react\\\\energy-frontend-react\\\\src\\\\components\\\\ChatRoom.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { over } from 'stompjs';\nimport SockJS from 'sockjs-client';\nimport '../chat.css';\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar stompClient = null;\nconst ChatRoom = () => {\n  _s();\n  var _location$state;\n  const location = useLocation();\n  const userEmail = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.email) || '';\n  const [privateChats, setPrivateChats] = useState(new Map());\n  const [publicChats, setPublicChats] = useState([]);\n  const [tab, setTab] = useState('CHATROOM');\n  const [loggedInUsers, setLoggedInUsers] = useState([]);\n  // Inside your ChatRoom component\n\n  const [isTyping, setIsTyping] = useState(false);\n  const [userData, setUserData] = useState({\n    username: userEmail,\n    receivername: '',\n    connected: false,\n    message: ''\n  });\n\n  // Function to send typing event\n  const sendTypingEvent = () => {\n    if (stompClient && userData.username !== tab) {\n      const typingData = {\n        senderName: userData.username,\n        receiverName: tab,\n        status: 'TYPING'\n      };\n      stompClient.send('/app/typing', {}, JSON.stringify(typingData));\n    }\n  };\n\n  // Function to handle user typing\n  const handleTyping = () => {\n    setIsTyping(true);\n    sendTypingEvent();\n\n    // You might also want to debounce this function to reduce the number of sent events\n  };\n\n  // Function to handle user stopping typing\n  const handleTypingStopped = () => {\n    setIsTyping(false);\n  };\n\n  // Attach these handlers to your input field\n  /*#__PURE__*/_jsxDEV(\"input\", {\n    type: \"text\",\n    className: \"input-message\",\n    placeholder: \"enter the message\",\n    value: userData.message,\n    onChange: handleMessage,\n    onKeyPress: handleTyping,\n    onBlur: handleTypingStopped\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 1\n  }, this);\n\n  // Handle incoming typing events from other users\n  const onTypingReceived = payload => {\n    const typingData = JSON.parse(payload.body);\n    if (typingData.status === 'TYPING') {\n      // Show a typing notification for the sender in the UI\n      // Update UI to indicate the sender is typing...\n    }\n  };\n  useEffect(() => {\n    connect();\n    console.log(userData);\n    fetchLoggedInUsers();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const connect = () => {\n    let Sock = new SockJS('http://localhost:8084/ws');\n    stompClient = over(Sock);\n    stompClient.connect({}, onConnected, onError);\n  };\n  const fetchLoggedInUsers = () => {\n    const token = localStorage.getItem('token');\n    fetch('http://localhost:8082/user/getLoggedInUsers', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      }\n    }).then(response => response.json()).then(data => {\n      setLoggedInUsers(data); // Update the state with logged-in users' data\n    }).catch(error => {\n      console.error('Error fetching logged-in users:', error);\n    });\n  };\n  const onConnected = () => {\n    setUserData({\n      ...userData,\n      connected: true\n    });\n    stompClient.subscribe('/chatroom/public', onMessageReceived);\n    stompClient.subscribe('/user/' + userData.username + '/private', onPrivateMessage);\n    stompClient.subscribe('/user/' + userData.username + '/typing', onTypingReceived);\n    userJoin();\n  };\n  const userJoin = () => {\n    var chatMessage = {\n      senderName: userData.username,\n      status: 'JOIN'\n    };\n    stompClient.send('/app/message', {}, JSON.stringify(chatMessage));\n  };\n  const onError = err => {\n    console.log(err);\n  };\n  const onMessageReceived = payload => {\n    var payloadData = JSON.parse(payload.body);\n    switch (payloadData.status) {\n      case \"JOIN\":\n        if (!privateChats.get(payloadData.senderName)) {\n          privateChats.set(payloadData.senderName, []);\n          setLoggedInUsers(prevUsers => [...prevUsers, payloadData.senderName]);\n        }\n        break;\n      case \"MESSAGE\":\n        publicChats.push(payloadData);\n        setPublicChats([...publicChats]);\n        break;\n    }\n  };\n  const onPrivateMessage = payload => {\n    var payloadData = JSON.parse(payload.body);\n    const senderChats = privateChats.get(payloadData.senderName) || [];\n    const updatedChats = [...senderChats, payloadData];\n    setPrivateChats(new Map(privateChats.set(payloadData.senderName, updatedChats)));\n  };\n  const handleMessage = event => {\n    const {\n      value\n    } = event.target;\n    setUserData({\n      ...userData,\n      message: value\n    });\n  };\n  const sendValue = () => {\n    if (stompClient) {\n      var chatMessage = {\n        senderName: userData.username,\n        message: userData.message,\n        status: 'MESSAGE'\n      };\n      console.log(chatMessage);\n      stompClient.send('/app/message', {}, JSON.stringify(chatMessage));\n      setUserData({\n        ...userData,\n        message: ''\n      });\n    }\n  };\n  const sendPrivateValue = () => {\n    if (stompClient && userData.username !== tab) {\n      var chatMessage = {\n        senderName: userData.username,\n        receiverName: tab,\n        message: userData.message,\n        status: 'MESSAGE'\n      };\n      if (userData.username !== tab) {\n        privateChats.get(tab).push(chatMessage);\n        setPrivateChats(new Map(privateChats));\n      }\n      stompClient.send('/app/private-message', {}, JSON.stringify(chatMessage));\n      setUserData({\n        ...userData,\n        message: ''\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: stompClient && userData.connected ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"member-list\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => {\n              setTab('CHATROOM');\n            },\n            className: `member ${tab === 'CHATROOM' && 'active'}`,\n            children: \"Chatroom\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 15\n          }, this), [...privateChats.keys()].map((name, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => {\n              setTab(name);\n            },\n            className: `member ${tab === name && 'active'}`,\n            children: name\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }, this), tab === 'CHATROOM' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"chat-messages\",\n          children: publicChats.map((chat, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: `message ${chat.senderName === userData.username && 'self'}`,\n            children: [chat.senderName !== userData.username && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"avatar\",\n              children: chat.senderName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-data\",\n              children: chat.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 21\n            }, this), chat.senderName === userData.username && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"avatar self\",\n              children: chat.senderName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 23\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"send-message\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"input-message\",\n            placeholder: \"enter the message\",\n            value: userData.message,\n            onChange: handleMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"send-button\",\n            onClick: sendValue,\n            children: \"send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 13\n      }, this), tab !== 'CHATROOM' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"chat-messages\",\n          children: [...privateChats.get(tab)].map((chat, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: `message ${chat.senderName === userData.username && 'self'}`,\n            children: [chat.senderName !== userData.username && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"avatar\",\n              children: chat.senderName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-data\",\n              children: chat.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 21\n            }, this), chat.senderName === userData.username && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"avatar self\",\n              children: chat.senderName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 23\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"send-message\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"input-message\",\n            placeholder: \"enter the message\",\n            value: userData.message,\n            onChange: handleMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"send-button\",\n            onClick: sendPrivateValue,\n            children: \"send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 9\n    }, this) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 191,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatRoom, \"a3AIQw6iYoAEX5lMAbc/PYEcHhU=\", false, function () {\n  return [useLocation];\n});\n_c = ChatRoom;\nexport default ChatRoom;\nvar _c;\n$RefreshReg$(_c, \"ChatRoom\");","map":{"version":3,"names":["React","useEffect","useState","over","SockJS","useLocation","jsxDEV","_jsxDEV","stompClient","ChatRoom","_s","_location$state","location","userEmail","state","email","privateChats","setPrivateChats","Map","publicChats","setPublicChats","tab","setTab","loggedInUsers","setLoggedInUsers","isTyping","setIsTyping","userData","setUserData","username","receivername","connected","message","sendTypingEvent","typingData","senderName","receiverName","status","send","JSON","stringify","handleTyping","handleTypingStopped","type","className","placeholder","value","onChange","handleMessage","onKeyPress","onBlur","fileName","_jsxFileName","lineNumber","columnNumber","onTypingReceived","payload","parse","body","connect","console","log","fetchLoggedInUsers","Sock","onConnected","onError","token","localStorage","getItem","fetch","method","headers","then","response","json","data","catch","error","subscribe","onMessageReceived","onPrivateMessage","userJoin","chatMessage","err","payloadData","get","set","prevUsers","push","senderChats","updatedChats","event","target","sendValue","sendPrivateValue","children","onClick","keys","map","name","index","chat","_c","$RefreshReg$"],"sources":["D:/AN4_SEMESTRUL1/DS_Lab/Assignment1/energy-frontend-react/energy-frontend-react/src/components/ChatRoom.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { over } from 'stompjs';\r\nimport SockJS from 'sockjs-client';\r\nimport '../chat.css';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nvar stompClient = null;\r\n\r\nconst ChatRoom = () => {\r\n  const location = useLocation();\r\n  const userEmail = location.state?.email || '';  \r\n  const [privateChats, setPrivateChats] = useState(new Map());\r\n  const [publicChats, setPublicChats] = useState([]);\r\n  const [tab, setTab] = useState('CHATROOM');\r\n  const [loggedInUsers, setLoggedInUsers] = useState([]);\r\n  // Inside your ChatRoom component\r\n\r\nconst [isTyping, setIsTyping] = useState(false);\r\nconst [userData, setUserData] = useState({\r\n  username: userEmail,\r\n  receivername: '',\r\n  connected: false,\r\n  message: '',\r\n});\r\n\r\n// Function to send typing event\r\nconst sendTypingEvent = () => {\r\n  if (stompClient && userData.username !== tab) {\r\n    const typingData = {\r\n      senderName: userData.username,\r\n      receiverName: tab,\r\n      status: 'TYPING',\r\n    };\r\n\r\n    stompClient.send('/app/typing', {}, JSON.stringify(typingData));\r\n  }\r\n};\r\n\r\n// Function to handle user typing\r\nconst handleTyping = () => {\r\n  setIsTyping(true);\r\n  sendTypingEvent();\r\n  \r\n  // You might also want to debounce this function to reduce the number of sent events\r\n};\r\n\r\n// Function to handle user stopping typing\r\nconst handleTypingStopped = () => {\r\n  setIsTyping(false);\r\n};\r\n\r\n// Attach these handlers to your input field\r\n<input\r\n  type=\"text\"\r\n  className=\"input-message\"\r\n  placeholder=\"enter the message\"\r\n  value={userData.message}\r\n  onChange={handleMessage}\r\n  onKeyPress={handleTyping}\r\n  onBlur={handleTypingStopped}\r\n/>\r\n\r\n// Handle incoming typing events from other users\r\nconst onTypingReceived = (payload) => {\r\n  const typingData = JSON.parse(payload.body);\r\n  if (typingData.status === 'TYPING') {\r\n    // Show a typing notification for the sender in the UI\r\n    // Update UI to indicate the sender is typing...\r\n  }\r\n};\r\n\r\n  \r\n  \r\n\r\n  useEffect(() => {\r\n    connect();\r\n    console.log(userData);\r\n    fetchLoggedInUsers();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const connect = () => {\r\n    let Sock = new SockJS('http://localhost:8084/ws');\r\n    stompClient = over(Sock);\r\n    stompClient.connect({}, onConnected, onError);\r\n  };\r\n\r\n  const fetchLoggedInUsers = () => {\r\n    const token = localStorage.getItem('token');\r\n    fetch('http://localhost:8082/user/getLoggedInUsers', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${token}`,\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setLoggedInUsers(data); // Update the state with logged-in users' data\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching logged-in users:', error);\r\n      });\r\n  };\r\n\r\n\r\n  const onConnected = () => {\r\n    setUserData({ ...userData, connected: true });\r\n    stompClient.subscribe('/chatroom/public', onMessageReceived);\r\n    stompClient.subscribe('/user/' + userData.username + '/private', onPrivateMessage);\r\n    stompClient.subscribe('/user/' + userData.username + '/typing', onTypingReceived);\r\n    userJoin();\r\n  };\r\n\r\n  const userJoin = () => {\r\n    var chatMessage = {\r\n      senderName: userData.username,\r\n      status: 'JOIN',\r\n    };\r\n    stompClient.send('/app/message', {}, JSON.stringify(chatMessage));\r\n  };\r\n\r\n  const onError = (err) => {\r\n    console.log(err);\r\n    \r\n}\r\nconst onMessageReceived = (payload)=>{\r\n  var payloadData = JSON.parse(payload.body);\r\n  switch(payloadData.status){\r\n      case \"JOIN\":\r\n          if(!privateChats.get(payloadData.senderName)){\r\n              privateChats.set(payloadData.senderName,[]);\r\n      setLoggedInUsers((prevUsers) => [...prevUsers, payloadData.senderName]);\r\n          }\r\n      break;\r\n      case \"MESSAGE\":\r\n          publicChats.push(payloadData);\r\n          setPublicChats([...publicChats]);\r\n          break;\r\n  }\r\n}\r\n  \r\n  const onPrivateMessage = (payload) => {\r\n    var payloadData = JSON.parse(payload.body);\r\n    const senderChats = privateChats.get(payloadData.senderName) || [];\r\n    const updatedChats = [...senderChats, payloadData];\r\n    setPrivateChats(new Map(privateChats.set(payloadData.senderName, updatedChats)));\r\n  };\r\n  \r\n\r\n  const handleMessage = (event) => {\r\n    const { value } = event.target;\r\n    setUserData({ ...userData, message: value });\r\n  };\r\n  \r\n\r\n  const sendValue = () => {\r\n    if (stompClient) {\r\n      var chatMessage = {\r\n        senderName: userData.username,\r\n        message: userData.message,\r\n        status: 'MESSAGE',\r\n      };\r\n      console.log(chatMessage);\r\n      stompClient.send('/app/message', {}, JSON.stringify(chatMessage));\r\n      setUserData({ ...userData, message: '' });\r\n    }\r\n  };\r\n\r\n  const sendPrivateValue = () => {\r\n    if (stompClient && userData.username !== tab) {\r\n      var chatMessage = {\r\n        senderName: userData.username,\r\n        receiverName: tab,\r\n        message: userData.message,\r\n        status: 'MESSAGE',\r\n      };\r\n\r\n      if (userData.username !== tab) {\r\n        privateChats.get(tab).push(chatMessage);\r\n        setPrivateChats(new Map(privateChats));\r\n      }\r\n      stompClient.send('/app/private-message', {}, JSON.stringify(chatMessage));\r\n      setUserData({ ...userData, message: '' });\r\n    }\r\n  };\r\n\r\n  \r\n \r\n  return (\r\n    <div className=\"container\">\r\n      {stompClient && userData.connected ? (\r\n        <div className=\"chat-box\">\r\n          <div className=\"member-list\">\r\n            <ul>\r\n              <li\r\n                onClick={() => {\r\n                  setTab('CHATROOM');\r\n                }}\r\n                className={`member ${tab === 'CHATROOM' && 'active'}`}\r\n              >\r\n                Chatroom\r\n              </li>\r\n              {[...privateChats.keys()].map((name, index) => (\r\n                <li\r\n                  onClick={() => {\r\n                    setTab(name);\r\n                  }}\r\n                  className={`member ${tab === name && 'active'}`}\r\n                  key={index}\r\n                >\r\n                  {name}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n          {tab === 'CHATROOM' && (\r\n            <div className=\"chat-content\">\r\n              <ul className=\"chat-messages\">\r\n                {publicChats.map((chat, index) => (\r\n                  <li\r\n                    className={`message ${\r\n                      chat.senderName === userData.username && 'self'\r\n                    }`}\r\n                    key={index}\r\n                  >\r\n                    {chat.senderName !== userData.username && (\r\n                      <div className=\"avatar\">{chat.senderName}</div>\r\n                    )}\r\n                    <div className=\"message-data\">{chat.message}</div>\r\n                    {chat.senderName === userData.username && (\r\n                      <div className=\"avatar self\">{chat.senderName}</div>\r\n                    )}\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n\r\n              <div className=\"send-message\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"input-message\"\r\n                  placeholder=\"enter the message\"\r\n                  value={userData.message}\r\n                  onChange={handleMessage}\r\n                />\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"send-button\"\r\n                  onClick={sendValue}\r\n                >\r\n                  send\r\n                </button>\r\n              </div>\r\n            </div>\r\n          )}\r\n          {tab !== 'CHATROOM' && (\r\n            <div className=\"chat-content\">\r\n              <ul className=\"chat-messages\">\r\n                {[...privateChats.get(tab)].map((chat, index) => (\r\n                  <li\r\n                    className={`message ${\r\n                      chat.senderName === userData.username && 'self'\r\n                    }`}\r\n                    key={index}\r\n                  >\r\n                    {chat.senderName !== userData.username && (\r\n                      <div className=\"avatar\">{chat.senderName}</div>\r\n                    )}\r\n                    <div className=\"message-data\">{chat.message}</div>\r\n                    {chat.senderName === userData.username && (\r\n                      <div className=\"avatar self\">{chat.senderName}</div>\r\n                    )}\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n\r\n              <div className=\"send-message\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"input-message\"\r\n                  placeholder=\"enter the message\"\r\n                  value={userData.message}\r\n                  onChange={handleMessage}\r\n                />\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"send-button\"\r\n                  onClick={sendPrivateValue}\r\n                >\r\n                  send\r\n                </button>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatRoom;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}