{"ast":null,"code":"var _jsxFileName = \"D:\\\\AN4_SEMESTRUL1\\\\DS_Lab\\\\Assignment1\\\\energy-frontend-react\\\\energy-frontend-react\\\\src\\\\components\\\\GetUsers.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../users-page.css';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GetUsers = () => {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [message, setMessage] = useState(null);\n  const [editedUser, setEditedUser] = useState(null);\n  useEffect(() => {\n    // Fetch the list of users when the component mounts\n    fetchUsers();\n  }, []);\n  const fetchUsers = () => {\n    // Fetch the list of users from your backend\n    const token = localStorage.getItem('token');\n    fetch('http://localhost:8082/user/getUsers', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      }\n    }).then(response => {\n      if (response.status === 200) {\n        return response.json();\n      }\n      if (response.status === 401) {\n        alert(\"Unauthorized Access\");\n      } else {\n        throw new Error('Failed to fetch data');\n      }\n    }).then(data => {\n      setUsers(data);\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n  };\n\n  //   const handleEdit = (user) => {\n  //     setEditedUser(user);\n  //   };\n\n  //   const handleCancelEdit = () => {\n  //     setEditedUser(null);\n  //   };\n\n  //   const handleUpdate = () => {\n  //     const token = localStorage.getItem('token');\n  //     fetch('http://localhost:8082/user/update', {\n  //       method: 'POST',\n  //       headers: {\n  //         'Content-Type': 'application/json',\n  //         'Authorization': `Bearer ${token}`,\n  //       },\n  //       body: JSON.stringify({\n  //         name: editedUser.name,\n  //         email: editedUser.email,\n  //       }),\n  //     })\n  //       .then((response) => {\n  //         if (response.status === 200) {\n  //           toast.success('User updated successfully.', {\n  //             style: { background: '#90d490' },\n  //             bodyClassName: 'custom-toast-content',\n  //           });\n  //           setEditedUser(null);\n  //           fetchUsers();\n  //         } \n  //         else {\n  //           toast.error('Failed to update user.', {\n  //             style: { background: 'red' },\n  //           });\n  //         }\n  //       })\n  //       .catch((error) => {\n  //         showMessage('An error occurred');\n  //       });\n  //   };\n\n  const showMessage = text => {\n    setMessage(text);\n    setTimeout(() => {\n      setMessage(null);\n    }, 2000);\n  };\n  const handleDelete = userId => {\n    const token = localStorage.getItem('token');\n    fetch(`http://localhost:8082/user/delete/${userId}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      }\n    }).then(response => {\n      if (response.status === 200) {\n        toast.success('User deleted successfully.', {\n          style: {\n            background: '#90d490'\n          },\n          bodyClassName: 'custom-toast-content'\n        });\n        fetchUsers();\n      } else {\n        toast.error('Failed to delete user.', {\n          style: {\n            background: 'red'\n          }\n        });\n      }\n    }).catch(error => {\n      showMessage('An error occurred');\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"List of Users\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-columns\",\n      children: users && users.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"User: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Name: \", user.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Email: \", user.email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"edit-delete-buttons\",\n          type: \"button\",\n          onClick: () => handleDelete(user.userId),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 15\n        }, this)]\n      }, user.userId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n};\n_s(GetUsers, \"1zdsz+2y7FhFLAjHoK618KKhZOU=\");\n_c = GetUsers;\nexport default GetUsers;\nvar _c;\n$RefreshReg$(_c, \"GetUsers\");","map":{"version":3,"names":["React","useState","useEffect","toast","jsxDEV","_jsxDEV","GetUsers","_s","users","setUsers","message","setMessage","editedUser","setEditedUser","fetchUsers","token","localStorage","getItem","fetch","method","headers","then","response","status","json","alert","Error","data","catch","error","console","showMessage","text","setTimeout","handleDelete","userId","success","style","background","bodyClassName","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","user","name","email","type","onClick","_c","$RefreshReg$"],"sources":["D:/AN4_SEMESTRUL1/DS_Lab/Assignment1/energy-frontend-react/energy-frontend-react/src/components/GetUsers.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport '../users-page.css';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst GetUsers = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [message, setMessage] = useState(null);\r\n  const [editedUser, setEditedUser] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Fetch the list of users when the component mounts\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  const fetchUsers = () => {\r\n    // Fetch the list of users from your backend\r\n    const token = localStorage.getItem('token');\r\n    fetch('http://localhost:8082/user/getUsers', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${token}`,\r\n      },\r\n    })\r\n      .then((response) => {\r\n        if (response.status === 200) {\r\n          return response.json();\r\n        } \r\n        if (response.status === 401) {\r\n            alert(\"Unauthorized Access\")\r\n          } \r\n        else {\r\n          throw new Error('Failed to fetch data');\r\n        }\r\n      })\r\n      .then((data) => {\r\n        setUsers(data);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error:', error);\r\n      });\r\n  };\r\n\r\n//   const handleEdit = (user) => {\r\n//     setEditedUser(user);\r\n//   };\r\n\r\n//   const handleCancelEdit = () => {\r\n//     setEditedUser(null);\r\n//   };\r\n\r\n//   const handleUpdate = () => {\r\n//     const token = localStorage.getItem('token');\r\n//     fetch('http://localhost:8082/user/update', {\r\n//       method: 'POST',\r\n//       headers: {\r\n//         'Content-Type': 'application/json',\r\n//         'Authorization': `Bearer ${token}`,\r\n//       },\r\n//       body: JSON.stringify({\r\n//         name: editedUser.name,\r\n//         email: editedUser.email,\r\n//       }),\r\n//     })\r\n//       .then((response) => {\r\n//         if (response.status === 200) {\r\n//           toast.success('User updated successfully.', {\r\n//             style: { background: '#90d490' },\r\n//             bodyClassName: 'custom-toast-content',\r\n//           });\r\n//           setEditedUser(null);\r\n//           fetchUsers();\r\n//         } \r\n//         else {\r\n//           toast.error('Failed to update user.', {\r\n//             style: { background: 'red' },\r\n//           });\r\n//         }\r\n//       })\r\n//       .catch((error) => {\r\n//         showMessage('An error occurred');\r\n//       });\r\n//   };\r\n\r\n  const showMessage = (text) => {\r\n    setMessage(text);\r\n\r\n    setTimeout(() => {\r\n      setMessage(null);\r\n    }, 2000);\r\n  };\r\n\r\n  const handleDelete = (userId) => {\r\n    const token = localStorage.getItem('token');\r\n    fetch(`http://localhost:8082/user/delete/${userId}`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${token}`,\r\n      },\r\n    })\r\n      .then((response) => {\r\n        if (response.status === 200) {\r\n          toast.success('User deleted successfully.', {\r\n            style: { background: '#90d490' },\r\n            bodyClassName: 'custom-toast-content',\r\n          });\r\n          fetchUsers();\r\n        } else {\r\n          toast.error('Failed to delete user.', {\r\n            style: { background: 'red' },\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        showMessage('An error occurred');\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>List of Users</h2>\r\n      {message && <p className=\"message\">{message}</p>}\r\n      <div className=\"user-columns\">\r\n        {users &&\r\n          users.map((user) => (\r\n            <div className=\"user-card\" key={user.userId}>\r\n              <h3>User: </h3>\r\n              <p>Name: {user.name}</p>\r\n              <p>Email: {user.email}</p>\r\n              <button\r\n                className=\"edit-delete-buttons\"\r\n                type=\"button\"\r\n                onClick={() => handleDelete(user.userId)}\r\n              >\r\n                Delete\r\n              </button>\r\n            </div>\r\n          ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GetUsers;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,mBAAmB;AAC1B,SAASC,KAAK,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACW,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAElDC,SAAS,CAAC,MAAM;IACd;IACAY,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,UAAU,GAAGA,CAAA,KAAM;IACvB;IACA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3CC,KAAK,CAAC,qCAAqC,EAAE;MAC3CC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClC,eAAe,EAAG,UAASL,KAAM;MACnC;IACF,CAAC,CAAC,CACCM,IAAI,CAAEC,QAAQ,IAAK;MAClB,IAAIA,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;QAC3B,OAAOD,QAAQ,CAACE,IAAI,CAAC,CAAC;MACxB;MACA,IAAIF,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;QACzBE,KAAK,CAAC,qBAAqB,CAAC;MAC9B,CAAC,MACE;QACH,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;MACzC;IACF,CAAC,CAAC,CACDL,IAAI,CAAEM,IAAI,IAAK;MACdlB,QAAQ,CAACkB,IAAI,CAAC;IAChB,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAChC,CAAC,CAAC;EACN,CAAC;;EAEH;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEE,MAAME,WAAW,GAAIC,IAAI,IAAK;IAC5BrB,UAAU,CAACqB,IAAI,CAAC;IAEhBC,UAAU,CAAC,MAAM;MACftB,UAAU,CAAC,IAAI,CAAC;IAClB,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;EAED,MAAMuB,YAAY,GAAIC,MAAM,IAAK;IAC/B,MAAMpB,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3CC,KAAK,CAAE,qCAAoCiB,MAAO,EAAC,EAAE;MACnDhB,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClC,eAAe,EAAG,UAASL,KAAM;MACnC;IACF,CAAC,CAAC,CACCM,IAAI,CAAEC,QAAQ,IAAK;MAClB,IAAIA,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;QAC3BpB,KAAK,CAACiC,OAAO,CAAC,4BAA4B,EAAE;UAC1CC,KAAK,EAAE;YAAEC,UAAU,EAAE;UAAU,CAAC;UAChCC,aAAa,EAAE;QACjB,CAAC,CAAC;QACFzB,UAAU,CAAC,CAAC;MACd,CAAC,MAAM;QACLX,KAAK,CAAC0B,KAAK,CAAC,wBAAwB,EAAE;UACpCQ,KAAK,EAAE;YAAEC,UAAU,EAAE;UAAM;QAC7B,CAAC,CAAC;MACJ;IACF,CAAC,CAAC,CACDV,KAAK,CAAEC,KAAK,IAAK;MAChBE,WAAW,CAAC,mBAAmB,CAAC;IAClC,CAAC,CAAC;EACN,CAAC;EAED,oBACE1B,OAAA;IAAAmC,QAAA,gBACEnC,OAAA;MAAAmC,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACrBlC,OAAO,iBAAIL,OAAA;MAAGwC,SAAS,EAAC,SAAS;MAAAL,QAAA,EAAE9B;IAAO;MAAA+B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChDvC,OAAA;MAAKwC,SAAS,EAAC,cAAc;MAAAL,QAAA,EAC1BhC,KAAK,IACJA,KAAK,CAACsC,GAAG,CAAEC,IAAI,iBACb1C,OAAA;QAAKwC,SAAS,EAAC,WAAW;QAAAL,QAAA,gBACxBnC,OAAA;UAAAmC,QAAA,EAAI;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACfvC,OAAA;UAAAmC,QAAA,GAAG,QAAM,EAACO,IAAI,CAACC,IAAI;QAAA;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACxBvC,OAAA;UAAAmC,QAAA,GAAG,SAAO,EAACO,IAAI,CAACE,KAAK;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC1BvC,OAAA;UACEwC,SAAS,EAAC,qBAAqB;UAC/BK,IAAI,EAAC,QAAQ;UACbC,OAAO,EAAEA,CAAA,KAAMjB,YAAY,CAACa,IAAI,CAACZ,MAAM,CAAE;UAAAK,QAAA,EAC1C;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GAVqBG,IAAI,CAACZ,MAAM;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAWtC,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACrC,EAAA,CA1IID,QAAQ;AAAA8C,EAAA,GAAR9C,QAAQ;AA4Id,eAAeA,QAAQ;AAAC,IAAA8C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}