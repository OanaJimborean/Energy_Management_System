{"ast":null,"code":"var _jsxFileName = \"D:\\\\AN4_SEMESTRUL1\\\\DS_Lab\\\\Assignment1\\\\energy-frontend-react\\\\energy-frontend-react\\\\src\\\\components\\\\UsersPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UsersPage = () => {\n  _s();\n  const [users, setUsers] = useState([]);\n  useEffect(() => {\n    // Fetch the list of users from your backend\n    fetch('http://localhost:8082/api/users', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).then(data => {\n      if (data && data.length > 0) {\n        // Map the fetched data to UserDTO\n        const mappedUsers = data.map(user => ({\n          userId: user.userId,\n          username: user.username,\n          email: user.email\n        }));\n        setUsers(mappedUsers);\n      }\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n  }, []); // The empty dependency array ensures that this effect runs once when the component mounts.\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Welcome to the User Management Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: users.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Username: \", user.username, \", Email: \", user.email]\n      }, user.userId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(UsersPage, \"JadZszbqna06PpJs9hMo7Hl/LOY=\");\n_c = UsersPage;\nexport default UsersPage;\nvar _c;\n$RefreshReg$(_c, \"UsersPage\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","UsersPage","_s","users","setUsers","fetch","method","headers","then","response","json","data","length","mappedUsers","map","user","userId","username","email","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/AN4_SEMESTRUL1/DS_Lab/Assignment1/energy-frontend-react/energy-frontend-react/src/components/UsersPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nconst UsersPage = () => {\r\n  const [users, setUsers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Fetch the list of users from your backend\r\n    fetch('http://localhost:8082/api/users', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (data && data.length > 0) {\r\n          // Map the fetched data to UserDTO\r\n          const mappedUsers = data.map((user) => ({\r\n            userId: user.userId,\r\n            username: user.username,\r\n            email: user.email,\r\n          }));\r\n          setUsers(mappedUsers);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error:', error);\r\n      });\r\n  }, []); // The empty dependency array ensures that this effect runs once when the component mounts.\r\n\r\n  return (\r\n    <div>\r\n      <h2>Welcome to the User Management Dashboard</h2>\r\n      <ul>\r\n        {users.map((user) => (\r\n          <li key={user.userId}>\r\n            Username: {user.username}, Email: {user.email}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UsersPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACd;IACAQ,KAAK,CAAC,iCAAiC,EAAE;MACvCC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC,CACCC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MACd,IAAIA,IAAI,IAAIA,IAAI,CAACC,MAAM,GAAG,CAAC,EAAE;QAC3B;QACA,MAAMC,WAAW,GAAGF,IAAI,CAACG,GAAG,CAAEC,IAAI,KAAM;UACtCC,MAAM,EAAED,IAAI,CAACC,MAAM;UACnBC,QAAQ,EAAEF,IAAI,CAACE,QAAQ;UACvBC,KAAK,EAAEH,IAAI,CAACG;QACd,CAAC,CAAC,CAAC;QACHd,QAAQ,CAACS,WAAW,CAAC;MACvB;IACF,CAAC,CAAC,CACDM,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAChC,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEpB,OAAA;IAAAsB,QAAA,gBACEtB,OAAA;MAAAsB,QAAA,EAAI;IAAwC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjD1B,OAAA;MAAAsB,QAAA,EACGnB,KAAK,CAACW,GAAG,CAAEC,IAAI,iBACdf,OAAA;QAAAsB,QAAA,GAAsB,YACV,EAACP,IAAI,CAACE,QAAQ,EAAC,WAAS,EAACF,IAAI,CAACG,KAAK;MAAA,GADtCH,IAAI,CAACC,MAAM;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEhB,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACxB,EAAA,CAxCID,SAAS;AAAA0B,EAAA,GAAT1B,SAAS;AA0Cf,eAAeA,SAAS;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}